definitions:
  database.AccessToken:
    properties:
      created_at:
        type: string
      git_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      token:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.Code:
    properties:
      created_at:
        type: string
      id:
        type: integer
      last_updated_at:
        type: string
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.Dataset:
    properties:
      created_at:
        type: string
      id:
        type: integer
      last_updated_at:
        type: string
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.Model:
    properties:
      created_at:
        type: string
      id:
        type: integer
      last_updated_at:
        type: string
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.Namespace:
    properties:
      created_at:
        type: string
      id:
        type: integer
      namespace_type:
        $ref: '#/definitions/database.NamespaceType'
      path:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.NamespaceType:
    enum:
    - user
    - organization
    type: string
    x-enum-varnames:
    - UserNamespace
    - OrgNamespace
  database.Organization:
    properties:
      created_at:
        type: string
      description:
        type: string
      git_path:
        type: string
      id:
        type: integer
      name:
        type: string
      namespace:
        $ref: '#/definitions/database.Namespace'
      namespace_id:
        type: integer
      path:
        description: unique name of the organization
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.Repository:
    properties:
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      download_count:
        type: integer
      downloads:
        items:
          $ref: '#/definitions/database.RepositoryDownload'
        type: array
      git_path:
        type: string
      http_clone_url:
        type: string
      id:
        type: integer
      labels:
        description: Depreated
        type: string
      license:
        type: string
      likes:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      readme:
        description: Depreated
        type: string
      repository_type:
        $ref: '#/definitions/types.RepositoryType'
      ssh_clone_url:
        type: string
      tags:
        items:
          $ref: '#/definitions/database.Tag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.RepositoryDownload:
    properties:
      click_download_count:
        type: integer
      created_at:
        type: string
      date:
        type: string
      id:
        type: integer
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  database.SSHKey:
    properties:
      content:
        type: string
      created_at:
        type: string
      git_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.Tag:
    properties:
      built_in:
        type: boolean
      category:
        type: string
      created_at:
        type: string
      group:
        type: string
      id:
        type: integer
      name:
        type: string
      scope:
        $ref: '#/definitions/database.TagScope'
      show_name:
        type: string
      updated_at:
        type: string
    type: object
  database.TagScope:
    enum:
    - model
    - dataset
    - code
    - space
    type: string
    x-enum-varnames:
    - ModelTagScope
    - DatasetTagScope
    - CodeTagScope
    - SpaceTagScope
  database.User:
    properties:
      accessTokens:
        items:
          $ref: '#/definitions/database.AccessToken'
        type: array
      created_at:
        type: string
      email:
        type: string
      git_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      namespace:
        items:
          $ref: '#/definitions/database.Namespace'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  handler.Create.addMemberRequest:
    properties:
      op_user:
        description: name of the operator
        type: string
      role:
        type: string
      user:
        description: name of user will be added to the org as a member
        type: string
    type: object
  handler.Delete.removeMemberRequest:
    properties:
      op_user:
        description: name of the operator
        type: string
      role:
        type: string
    type: object
  types.APIBadRequest:
    type: object
  types.APIInternalServerError:
    type: object
  types.Code:
    properties:
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      downloads:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
    type: object
  types.CreateCodeReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.CreateDatasetReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.CreateModelReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.CreateOrgReq:
    properties:
      description:
        example: org description
        type: string
      full_name:
        description: Display name
        example: org display name
        type: string
      name:
        description: Org unique identifier
        example: org_name_1
        type: string
      username:
        example: user_name_1
        type: string
    type: object
  types.CreateSSHKeyRequest:
    properties:
      content:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  types.CreateSpaceReq:
    properties:
      cover_image_url:
        type: string
      default_branch:
        example: main
        type: string
      description:
        type: string
      env:
        type: string
      hardware:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      sdk:
        description: |-
          Creator   string `json:"username" example:"creator_user_name"`
          Namespace string `json:"namespace" example:"user_or_org_name"`
          Name      string `json:"name" example:"space_name_1"`
          License   string `json:"license" example:"MIT"`
        example: "1"
        type: string
      sdk_version:
        example: v0.1
        type: string
      secrets:
        type: string
      template:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.CreateSpaceResourceReq:
    properties:
      cpu:
        type: integer
      disk:
        type: integer
      gpu:
        type: integer
      memory:
        type: integer
      name:
        type: string
    required:
    - cpu
    - disk
    - gpu
    - memory
    - name
    type: object
  types.CreateSpaceSdkReq:
    properties:
      name:
        type: string
      version:
        type: string
    required:
    - name
    - version
    type: object
  types.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        description: Display name of the user
        type: string
      username:
        description: the login name
        type: string
    type: object
  types.CreateUserTokenRequest:
    properties:
      name:
        type: string
      username:
        type: string
    type: object
  types.Dataset:
    properties:
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      downloads:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
    type: object
  types.DatasetResp:
    properties:
      description:
        type: string
      downloads:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
    type: object
  types.DeleteOrgReq:
    properties:
      current_user:
        type: string
    type: object
  types.DeleteUserTokenRequest:
    properties:
      name:
        type: string
      username:
        type: string
    type: object
  types.EditOrgReq:
    properties:
      current_user:
        type: string
      description:
        example: org description
        type: string
      full_name:
        description: Display name
        example: org display name
        type: string
    type: object
  types.ListByPathReq:
    properties:
      paths:
        items:
          type: string
        type: array
    type: object
  types.Model:
    properties:
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      downloads:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      status:
        description: url to interact with the model
        example: RUNNING
        type: string
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      widget_type:
        allOf:
        - $ref: '#/definitions/types.ModelWidgetType'
        description: 'widget UI style: generation,chat'
        example: generation
    type: object
  types.ModelPredictReq:
    properties:
      current_user:
        type: string
      input:
        type: string
      version:
        type: string
    type: object
  types.ModelResp:
    properties:
      description:
        type: string
      downloads:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
    type: object
  types.ModelWidgetType:
    enum:
    - generation
    - chat
    type: string
    x-enum-varnames:
    - ModelWidgetTypeGeneration
    - ModelWidgetTypeChat
  types.RepoTag:
    properties:
      built_in:
        type: boolean
      category:
        type: string
      created_at:
        type: string
      group:
        type: string
      name:
        type: string
      show_name:
        type: string
      updated_at:
        type: string
    type: object
  types.Repository:
    properties:
      http_clone_url:
        type: string
      ssh_clone_url:
        type: string
    type: object
  types.RepositoryType:
    enum:
    - model
    - dataset
    - space
    - code
    - ""
    type: string
    x-enum-varnames:
    - ModelRepo
    - DatasetRepo
    - SpaceRepo
    - CodeRepo
    - UnknownRepo
  types.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  types.ResponseWithTotal:
    properties:
      data: {}
      message:
        type: string
      total:
        type: integer
    type: object
  types.Space:
    properties:
      cover_image_url:
        type: string
      created_at:
        type: string
      default_branch:
        type: string
      description:
        example: ""
        type: string
      endpoint:
        description: the serving endpoint url
        example: https://localhost/spaces/myname/myspace
        type: string
      env:
        type: string
      hardware:
        type: string
      id:
        type: integer
      license:
        example: MIT
        type: string
      like_count:
        type: integer
      name:
        example: space_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: ""
        type: string
      path:
        example: user_or_org_name/space_name_1
        type: string
      private:
        type: boolean
      repository:
        $ref: '#/definitions/types.Repository'
      sdk:
        description: like gradio,steamlit etc
        example: "1"
        type: string
      sdk_version:
        example: v0.1
        type: string
      secrets:
        type: string
      status:
        description: deploying, running, failed
        type: string
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      template:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      username:
        example: creator_user_name
        type: string
    type: object
  types.SpaceResource:
    properties:
      cpu:
        type: integer
      disk:
        type: integer
      gpu:
        type: integer
      id:
        type: integer
      memory:
        type: integer
      name:
        type: string
    type: object
  types.SpaceSdk:
    properties:
      id:
        type: integer
      name:
        type: string
      version:
        type: string
    type: object
  types.UpdateCodeReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.UpdateDatasetReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.UpdateModelReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.UpdateSpaceReq:
    properties:
      cover_image_url:
        type: string
      default_branch:
        example: main
        type: string
      description:
        type: string
      env:
        type: string
      hardware:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      sdk:
        description: |-
          Creator   string `json:"username" example:"creator_user_name"`
          Namespace string `json:"namespace" example:"user_or_org_name"`
          Name      string `json:"name" example:"space_name_1"`
          License   string `json:"license" example:"MIT"`
        example: "1"
        type: string
      sdk_version:
        example: v0.1
        type: string
      secrets:
        type: string
      template:
        type: string
      username:
        example: creator_user_name
        type: string
    type: object
  types.UpdateSpaceResourceReq:
    properties:
      cpu:
        type: integer
      disk:
        type: integer
      gpu:
        type: integer
      memory:
        type: integer
      name:
        type: string
    type: object
  types.UpdateSpaceSdkReq:
    properties:
      id:
        type: integer
      name:
        type: string
      version:
        type: string
    type: object
  types.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        description: Display name of the user
        type: string
      username:
        description: the login name
        type: string
    type: object
  types.User:
    properties:
      email:
        type: string
      nickname:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /codes:
    get:
      consumes:
      - application/json
      description: get visiable codes for current user
      parameters:
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Code'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visiable codes for current user
      tags:
      - Code
    post:
      consumes:
      - application/json
      description: create a new code
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateCodeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Code'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new code
      tags:
      - Code
  /codes/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists code
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists code
      tags:
      - Code
    get:
      consumes:
      - application/json
      description: get code detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Code'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get code detail
      tags:
      - Code
    put:
      consumes:
      - application/json
      description: update a exists code
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateCodeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Code'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists code
      tags:
      - Code
  /datasets:
    get:
      consumes:
      - application/json
      description: get visiable datasets for current user
      parameters:
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        required: true
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Dataset'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visiable datasets for current user
      tags:
      - Dataset
    post:
      consumes:
      - application/json
      description: create a new dataset
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateDatasetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Dataset'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new dataset
      tags:
      - Dataset
  /datasets/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists dataset
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists dataset
      tags:
      - Dataset
    get:
      consumes:
      - application/json
      description: get dataset detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Dataset'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get dataset detail
      tags:
      - Dataset
    put:
      consumes:
      - application/json
      description: update a exists dataset
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateDatasetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Dataset'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists dataset
      tags:
      - Dataset
  /datasets/{namespace}/{name}/viewer/{file_path}:
    get:
      consumes:
      - application/json
      description: get the demo data of the dataset
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: file_path
        in: path
        name: file_path
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get the demo data of the dataset
      tags:
      - Dataset
  /list/datasets_by_path:
    post:
      consumes:
      - application/json
      description: list datasets by paths
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ListByPathReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.DatasetResp'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List datasets by paths
      tags:
      - List
  /list/models_by_path:
    post:
      consumes:
      - application/json
      description: list models by paths
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ListByPathReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.ModelResp'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List models by paths
      tags:
      - List
  /list/spaces_by_path:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ListByPathReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List spaces by paths
      tags:
      - List
  /models:
    get:
      consumes:
      - application/json
      description: get visiable models for current user
      parameters:
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Model'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visiable models for current user
      tags:
      - Model
    post:
      consumes:
      - application/json
      description: create a new model
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateModelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Model'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new model
      tags:
      - Model
  /models/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists model
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists model
      tags:
      - Model
    get:
      consumes:
      - application/json
      description: get model detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Model'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get model detail
      tags:
      - Model
    put:
      consumes:
      - application/json
      description: update a exists model
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateModelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Model'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists model
      tags:
      - Model
  /models/{namespace}/{name}/predict:
    post:
      consumes:
      - application/json
      description: invoke model prediction
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: input for model prediction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ModelPredictReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Invoke model prediction
      tags:
      - Model
  /organization/{namespace}/codes:
    get:
      consumes:
      - application/json
      parameters:
      - description: org name
        in: path
        name: namespace
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        required: true
        type: string
      - description: page size
        in: query
        name: per
        type: integer
      - description: current page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Code'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get organization codes
      tags:
      - Organization
  /organization/{namespace}/datasets:
    get:
      consumes:
      - application/json
      description: get organization datasets
      parameters:
      - description: org name
        in: path
        name: namespace
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        required: true
        type: string
      - description: page size
        in: query
        name: per
        type: integer
      - description: current page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Dataset'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get organization datasets
      tags:
      - Organization
  /organization/{namespace}/models:
    get:
      consumes:
      - application/json
      description: get organization models
      parameters:
      - description: org name
        in: path
        name: namespace
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        required: true
        type: string
      - description: page size
        in: query
        name: per
        type: integer
      - description: current page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Model'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get organization models
      tags:
      - Organization
  /organization/{namespace}/spaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: org name
        in: path
        name: namespace
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        required: true
        type: string
      - description: page size
        in: query
        name: per
        type: integer
      - description: current page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get organization Spaces
      tags:
      - Organization
  /organizations:
    get:
      consumes:
      - application/json
      description: get organizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Organization'
                  type: array
                total:
                  type: integer
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get organizations
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: create a new organization
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateOrgReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Organization'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new organization
      tags:
      - Organization
  /organizations/{name}:
    delete:
      consumes:
      - application/json
      description: delete organization
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.DeleteOrgReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete organization
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: update organization
      parameters:
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.EditOrgReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Organization'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update organization
      tags:
      - Organization
  /organizations/{name}/members:
    post:
      consumes:
      - application/json
      description: user will be added to org with a role
      parameters:
      - description: org name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.Create.addMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create new membership between org and user
      tags:
      - Member
  /organizations/{name}/members/{username}:
    delete:
      consumes:
      - application/json
      description: user's role will be remove from org
      parameters:
      - description: org name
        in: path
        name: name
        required: true
        type: string
      - description: user name
        in: path
        name: username
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.Delete.removeMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Remove membership between org and user
      tags:
      - Member
  /space_resources:
    get:
      consumes:
      - application/json
      description: get space resources
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.SpaceResource'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get space resources
      tags:
      - SpaceReource
    post:
      consumes:
      - application/json
      description: create space resource
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSpaceResourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceResource'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create space resource
      tags:
      - SpaceReource
  /space_resources/{id}:
    delete:
      consumes:
      - application/json
      description: delete a exist space resource
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exist space resource
      tags:
      - SpaceReource
    put:
      consumes:
      - application/json
      description: update a exist space resource
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSpaceResourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceResource'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exist space resource
      tags:
      - SpaceReource
  /space_sdks:
    get:
      consumes:
      - application/json
      description: get space sdks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.SpaceSdk'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get space sdks
      tags:
      - SpaceSdk
    post:
      consumes:
      - application/json
      description: create space sdk
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSpaceSdkReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceSdk'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create space sdk
      tags:
      - SpaceSdk
  /space_sdks/{id}:
    delete:
      consumes:
      - application/json
      description: delete a exist space sdk
      parameters:
      - description: id
        in: path
        name: 写id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exist space sdk
      tags:
      - SpaceSdk
    put:
      consumes:
      - application/json
      description: update a exist space sdk
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSpaceSdkReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceSdk'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exist space sdk
      tags:
      - SpaceSdk
  /spaces:
    get:
      consumes:
      - application/json
      description: get spaces visible to current user
      parameters:
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get spaces visible to current user
      tags:
      - Space
    post:
      consumes:
      - application/json
      description: create a new space
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSpaceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Space'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new space
      tags:
      - Space
  /spaces/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists space
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists space
      tags:
      - Space
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Space'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: show space detail
      tags:
      - Space
    put:
      consumes:
      - application/json
      description: update a exists space
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSpaceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Space'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists space
      tags:
      - Space
  /spaces/{namespace}/{name}/logs:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get space logs
      tags:
      - Space
  /spaces/{namespace}/{name}/run:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: run space app
      tags:
      - Space
  /spaces/{namespace}/{name}/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get space status
      tags:
      - Space
  /spaces/{namespace}/{name}/stop:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: stop space app
      tags:
      - Space
  /spaces/{namespace}/{name}/wakeup:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: wake up space app
      tags:
      - Space
  /tags:
    get:
      consumes:
      - application/json
      description: get all tags
      produces:
      - application/json
      responses:
        "200":
          description: tags
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Tag'
                  type: array
                total:
                  type: integer
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all tags
      tags:
      - Tag
  /user/{username}/codes:
    get:
      consumes:
      - application/json
      description: get user codes
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Code'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user codes
      tags:
      - User
  /user/{username}/datasets:
    get:
      consumes:
      - application/json
      description: get user datasets
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Dataset'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user datasets
      tags:
      - User
  /user/{username}/models:
    get:
      consumes:
      - application/json
      description: get user models
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Model'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user models
      tags:
      - User
  /user/{username}/spaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user spaces
      tags:
      - User
  /user/{username}/ssh_key/{name}:
    delete:
      consumes:
      - application/json
      description: delete specific SSH key for the given user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: key name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete specific SSH key for the given user
      tags:
      - SSH Key
  /user/{username}/ssh_keys:
    get:
      consumes:
      - application/json
      description: get all SSH keys for the given user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.SSHKey'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all SSH keys for the given user
      tags:
      - SSH Key
    post:
      consumes:
      - application/json
      description: create a new SSH key for the given user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSSHKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.SSHKey'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new SSH key for the given user
      tags:
      - SSH Key
  /user/{username}/tokens:
    post:
      consumes:
      - application/json
      description: create access token for a user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.AccessToken'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create access token for a user
      tags:
      - Access token
  /user/{username}/tokens/{token_name}:
    delete:
      consumes:
      - application/json
      description: delete access token for a user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: token_name
        in: path
        name: token_name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.DeleteUserTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete access token for a user
      tags:
      - Access token
  /users:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.User'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new user
      tags:
      - User
  /users/{username}:
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.User'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update user
      tags:
      - User
securityDefinitions:
  ApiKey:
    description: Bearer token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
