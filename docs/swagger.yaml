definitions:
  database.AccessToken:
    properties:
      application:
        allOf:
        - $ref: '#/definitions/types.AccessTokenApp'
        description: 'example: csghub, starship'
      created_at:
        type: string
      expired_at:
        type: string
      git_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      permission:
        type: string
      token:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.Code:
    properties:
      created_at:
        type: string
      id:
        type: integer
      last_updated_at:
        type: string
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.Collection:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      namespace:
        type: string
      nickname:
        type: string
      private:
        type: boolean
      repositories:
        items:
          $ref: '#/definitions/database.Repository'
        type: array
      theme:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      username:
        type: string
    type: object
  database.Dataset:
    properties:
      created_at:
        type: string
      id:
        type: integer
      last_updated_at:
        type: string
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.Mirror:
    properties:
      created_at:
        type: string
      id:
        type: integer
      interval:
        type: string
      last_message:
        type: string
      last_updated_at:
        type: string
      local_repo_path:
        type: string
      mirror_source:
        $ref: '#/definitions/database.MirrorSource'
      mirror_source_id:
        type: integer
      mirror_task_id:
        type: integer
      progress:
        type: integer
      push_mirror_created:
        type: boolean
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      source_repo_path:
        type: string
      source_url:
        type: string
      status:
        $ref: '#/definitions/types.MirrorTaskStatus'
      updated_at:
        type: string
    type: object
  database.MirrorSource:
    properties:
      created_at:
        type: string
      id:
        type: integer
      info_api_url:
        type: string
      source_name:
        type: string
      updated_at:
        type: string
    type: object
  database.Model:
    properties:
      created_at:
        type: string
      id:
        type: integer
      last_updated_at:
        type: string
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
    type: object
  database.Namespace:
    properties:
      created_at:
        type: string
      id:
        type: integer
      mirrored:
        type: boolean
      namespace_type:
        $ref: '#/definitions/database.NamespaceType'
      path:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.NamespaceType:
    enum:
    - user
    - organization
    type: string
    x-enum-varnames:
    - UserNamespace
    - OrgNamespace
  database.Repository:
    properties:
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      download_count:
        type: integer
      downloads:
        items:
          $ref: '#/definitions/database.RepositoryDownload'
        type: array
      git_path:
        type: string
      http_clone_url:
        type: string
      id:
        type: integer
      labels:
        description: Depreated
        type: string
      license:
        type: string
      likes:
        type: integer
      mirror:
        $ref: '#/definitions/database.Mirror'
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      readme:
        description: Depreated
        type: string
      repository_type:
        $ref: '#/definitions/types.RepositoryType'
      source:
        $ref: '#/definitions/types.RepositorySource'
      ssh_clone_url:
        type: string
      sync_status:
        $ref: '#/definitions/types.RepositorySyncStatus'
      tags:
        items:
          $ref: '#/definitions/database.Tag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.RepositoryDownload:
    properties:
      click_download_count:
        type: integer
      created_at:
        type: string
      date:
        type: string
      id:
        type: integer
      repository:
        $ref: '#/definitions/database.Repository'
      repository_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  database.SSHKey:
    properties:
      content:
        type: string
      created_at:
        type: string
      git_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/database.User'
      user_id:
        type: integer
    type: object
  database.SyncClientSetting:
    properties:
      concurrent_count:
        type: integer
      created_at:
        type: string
      default:
        type: boolean
      id:
        type: integer
      max_bandwidth:
        type: integer
      token:
        type: string
      updated_at:
        type: string
    type: object
  database.Tag:
    properties:
      built_in:
        type: boolean
      category:
        type: string
      created_at:
        type: string
      group:
        type: string
      id:
        type: integer
      name:
        type: string
      scope:
        $ref: '#/definitions/database.TagScope'
      show_name:
        type: string
      updated_at:
        type: string
    type: object
  database.TagScope:
    enum:
    - model
    - dataset
    - code
    - space
    type: string
    x-enum-varnames:
    - ModelTagScope
    - DatasetTagScope
    - CodeTagScope
    - SpaceTagScope
  database.User:
    properties:
      accessTokens:
        items:
          $ref: '#/definitions/database.AccessToken'
        type: array
      avatar:
        type: string
      bio:
        type: string
      can_change_username:
        description: allow user to change username once
        type: boolean
      company_verified:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      email_verified:
        type: boolean
      gender:
        type: string
      git_id:
        type: integer
      homepage:
        type: string
      id:
        type: integer
      last_login_at:
        type: string
      name:
        type: string
      namespace:
        items:
          $ref: '#/definitions/database.Namespace'
        type: array
      password_hash:
        description: password for user registered without casdoor
        type: string
      phone:
        type: string
      phone_verified:
        type: boolean
      reg_provider:
        description: |-
          user registered from default login page, from casdoor, etc. Possible values:

          - "default"
          - "casdoor"
        type: string
      role_mask:
        type: string
      updated_at:
        type: string
      username:
        type: string
      uuid:
        description: TODO:add unique index after migration
        type: string
    type: object
  handler.SetOpWeight.SetOpWeightReq:
    properties:
      repo_id:
        type: integer
      weight:
        type: integer
    required:
    - repo_id
    - weight
    type: object
  telemetry.Counts:
    properties:
      codes:
        type: integer
      datasets:
        type: integer
      models:
        type: integer
      spaces:
        type: integer
      total_repos:
        type: integer
    type: object
  telemetry.Licensee:
    properties:
      Company:
        type: string
      Email:
        type: string
      Name:
        type: string
    type: object
  telemetry.Settings:
    properties:
      collected_data_categories:
        items:
          type: string
        type: array
      gitaly_apdex:
        type: number
      ldap_encrypted_secrets_enabled:
        type: boolean
      operating_system:
        type: string
      service_ping_features_enabled:
        type: boolean
      smtp_encrypted_secrets_enabled:
        type: boolean
      snowplow_configured_to_gitlab_collector:
        type: boolean
      snowplow_enabled:
        type: boolean
    type: object
  telemetry.Usage:
    properties:
      active_user_count:
        type: integer
      counts:
        $ref: '#/definitions/telemetry.Counts'
      edition:
        type: string
      historical_max_users:
        type: integer
      hostname:
        type: string
      installation_type:
        type: string
      license_add_ons:
        additionalProperties: true
        type: object
      license_billable_users:
        type: integer
      license_expires_at:
        type: string
      license_id:
        type: integer
      license_md5:
        type: string
      license_plan:
        type: string
      license_starts_at:
        type: string
      license_user_count:
        type: integer
      licensee:
        $ref: '#/definitions/telemetry.Licensee'
      recorded_at:
        type: string
      settings:
        $ref: '#/definitions/telemetry.Settings'
      uuid:
        type: string
      version:
        type: string
    type: object
  types.APIBadRequest:
    type: object
  types.APIInternalServerError:
    type: object
  types.APIUnauthorized:
    type: object
  types.AccessTokenApp:
    enum:
    - git
    - git
    - mirror
    - starship
    type: string
    x-enum-varnames:
    - AccessTokenAppGit
    - AccessTokenAppCSGHub
    - AccessTokenAppMirror
    - AccessTokenAppStarship
  types.Branch:
    properties:
      commit:
        $ref: '#/definitions/types.RepoBranchCommit'
      message:
        type: string
      name:
        type: string
    type: object
  types.Code:
    properties:
      can_manage:
        type: boolean
      can_write:
        type: boolean
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      downloads:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      namespace:
        $ref: '#/definitions/types.Namespace'
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      source:
        $ref: '#/definitions/types.RepositorySource'
      sync_status:
        $ref: '#/definitions/types.RepositorySyncStatus'
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      user_likes:
        type: boolean
    type: object
  types.Collection:
    properties:
      can_manage:
        type: boolean
      can_write:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      nickname:
        type: string
      private:
        type: boolean
      repositories:
        items:
          $ref: '#/definitions/types.CollectionRepository'
        type: array
      theme:
        type: string
      updated_at:
        type: string
      user_likes:
        type: boolean
      username:
        type: string
    type: object
  types.CollectionRepository:
    properties:
      created_at:
        type: string
      description:
        type: string
      download_count:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      repository_type:
        $ref: '#/definitions/types.RepositoryType'
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  types.Commit:
    properties:
      author_email:
        type: string
      author_name:
        type: string
      authored_date:
        type: string
      committer_date:
        type: string
      committer_email:
        type: string
      committer_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      message:
        type: string
    type: object
  types.CommitMeta:
    properties:
      sha:
        type: string
    type: object
  types.CommitResponse:
    properties:
      author_email:
        type: string
      author_name:
        type: string
      authored_date:
        type: string
      committer_date:
        type: string
      committer_email:
        type: string
      committer_name:
        type: string
      created_at:
        type: string
      diff:
        items:
          type: integer
        type: array
      files:
        items:
          type: string
        type: array
      id:
        type: string
      message:
        type: string
      parents:
        items:
          $ref: '#/definitions/types.CommitMeta'
        type: array
      stats:
        $ref: '#/definitions/types.CommitStats'
    type: object
  types.CommitStats:
    properties:
      additions:
        type: integer
      deletions:
        type: integer
      total:
        type: integer
    type: object
  types.CreateCodeReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
    type: object
  types.CreateCollectionReq:
    properties:
      description:
        type: string
      name:
        example: collection1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: collection nick name
        type: string
      private:
        type: boolean
      theme:
        example: '#fff000'
        type: string
    type: object
  types.CreateDatasetReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
    type: object
  types.CreateFileReq:
    properties:
      branch:
        type: string
      content:
        type: string
      message:
        type: string
      new_branch:
        type: string
    type: object
  types.CreateFileResp:
    type: object
  types.CreateJWTReq:
    properties:
      current_user:
        type: string
      uuid:
        type: string
    required:
    - current_user
    - uuid
    type: object
  types.CreateJWTResp:
    properties:
      expire_at:
        type: string
      token:
        type: string
    type: object
  types.CreateMirrorParams:
    properties:
      mirror_source_id:
        type: integer
      password:
        type: string
      source_url:
        type: string
      username:
        type: string
    type: object
  types.CreateMirrorRepoReq:
    properties:
      branch:
        type: string
      description:
        type: string
      license:
        type: string
      mirror_source_id:
        description: source id for HF,github etc
        type: integer
      repo_type:
        allOf:
        - $ref: '#/definitions/types.RepositoryType'
        description: repo basic info
      source_name:
        type: string
      source_namespace:
        type: string
      source_url:
        description: mirror source info
        type: string
      sync_lfs:
        type: boolean
    required:
    - mirror_source_id
    - repo_type
    - source_name
    - source_namespace
    - source_url
    type: object
  types.CreateMirrorSourceReq:
    properties:
      info_api_url:
        type: string
      source_name:
        type: string
    required:
    - source_name
    type: object
  types.CreateModelReq:
    properties:
      default_branch:
        example: main
        type: string
      description:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
    type: object
  types.CreateSSHKeyRequest:
    properties:
      content:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  types.CreateSpaceReq:
    properties:
      cluster_id:
        type: string
      cover_image_url:
        type: string
      default_branch:
        example: main
        type: string
      description:
        type: string
      env:
        type: string
      labels:
        example: ""
        type: string
      license:
        example: MIT
        type: string
      name:
        example: model_name_1
        type: string
      namespace:
        example: user_or_org_name
        type: string
      nickname:
        example: model display name
        type: string
      private:
        type: boolean
      readme:
        type: string
      resource_id:
        type: integer
      sdk:
        example: "1"
        type: string
      sdk_version:
        example: v0.1
        type: string
      secrets:
        type: string
      template:
        type: string
    type: object
  types.CreateSpaceResourceReq:
    properties:
      cluster_id:
        type: string
      cost_per_hour:
        type: number
      name:
        type: string
      resources:
        type: string
    required:
    - cluster_id
    - cost_per_hour
    - name
    - resources
    type: object
  types.CreateSpaceSdkReq:
    properties:
      name:
        type: string
      version:
        type: string
    required:
    - name
    - version
    type: object
  types.CreateSyncClientSettingReq:
    properties:
      concurrent_count:
        type: integer
      max_bandwidth:
        type: integer
      token:
        type: string
    required:
    - token
    type: object
  types.Dataset:
    properties:
      can_manage:
        type: boolean
      can_write:
        type: boolean
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      downloads:
        type: integer
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      namespace:
        $ref: '#/definitions/types.Namespace'
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      readme:
        type: string
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      source:
        $ref: '#/definitions/types.RepositorySource'
      sync_status:
        $ref: '#/definitions/types.RepositorySyncStatus'
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      user_likes:
        type: boolean
    type: object
  types.DatasetResp:
    properties:
      description:
        type: string
      downloads:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
    type: object
  types.DeployUpdateReq:
    properties:
      cluster_id:
        type: string
      deploy_name:
        type: string
      env:
        type: string
      max_replica:
        minimum: 1
        type: integer
      min_replica:
        minimum: 1
        type: integer
      resource_id:
        type: integer
      revision:
        type: string
      runtime_framework_id:
        type: integer
      secure_level:
        type: integer
    type: object
  types.Event:
    properties:
      c_id:
        example: ""
        type: string
      c_ip:
        example: ""
        type: string
      ext:
        description: reserved for future use
        example: ""
        type: string
      id:
        example: space_card
        type: string
      m:
        example: space
        type: string
      v:
        example: "1"
        type: string
    type: object
  types.File:
    properties:
      commit:
        $ref: '#/definitions/types.Commit'
      content:
        type: string
      last_commit_sha:
        type: string
      lfs:
        type: boolean
      lfs_pointer_size:
        type: integer
      lfs_relative_path:
        description: relative path in lfs storage
        type: string
      mode:
        type: string
      name:
        type: string
      path:
        type: string
      sha:
        type: string
      size:
        type: integer
      type:
        type: string
      url:
        description: URL to browse the file
        type: string
    type: object
  types.InstanceRunReq:
    properties:
      cluster_id:
        type: string
      deploy_name:
        type: string
      resource_id:
        type: integer
      revision:
        type: string
      runtime_framework_id:
        type: integer
    type: object
  types.ListByPathReq:
    properties:
      paths:
        items:
          type: string
        type: array
    type: object
  types.MirrorRepo:
    properties:
      path:
        type: string
      progress:
        type: integer
      repo_type:
        $ref: '#/definitions/types.RepositoryType'
      sync_status:
        $ref: '#/definitions/types.RepositorySyncStatus'
    type: object
  types.MirrorTaskStatus:
    enum:
    - waiting
    - running
    - finished
    - failed
    - incomplete
    type: string
    x-enum-varnames:
    - MirrorWaiting
    - MirrorRunning
    - MirrorFinished
    - MirrorFailed
    - MirrorIncomplete
  types.Model:
    properties:
      can_manage:
        type: boolean
      can_write:
        type: boolean
      created_at:
        type: string
      default_branch:
        type: string
      description:
        type: string
      downloads:
        type: integer
      enable_finetune:
        type: boolean
      enable_inference:
        type: boolean
      id:
        type: integer
      likes:
        type: integer
      name:
        type: string
      namespace:
        $ref: '#/definitions/types.Namespace'
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      readme:
        type: string
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      source:
        $ref: '#/definitions/types.RepositorySource'
      status:
        description: url to interact with the model
        example: RUNNING
        type: string
      sync_status:
        $ref: '#/definitions/types.RepositorySyncStatus'
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      user_likes:
        type: boolean
      widget_type:
        allOf:
        - $ref: '#/definitions/types.ModelWidgetType'
        description: 'widget UI style: generation,chat'
        example: generation
    type: object
  types.ModelPredictReq:
    properties:
      current_user:
        type: string
      input:
        type: string
      version:
        type: string
    type: object
  types.ModelResp:
    properties:
      description:
        type: string
      downloads:
        type: integer
      name:
        type: string
      nickname:
        type: string
      path:
        type: string
      private:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      updated_at:
        type: string
    type: object
  types.ModelRunReq:
    properties:
      cluster_id:
        type: string
      deploy_name:
        type: string
      env:
        type: string
      max_replica:
        type: integer
      min_replica:
        type: integer
      resource_id:
        type: integer
      revision:
        type: string
      runtime_framework_id:
        type: integer
      secure_level:
        type: integer
    type: object
  types.ModelWidgetType:
    enum:
    - generation
    - chat
    type: string
    x-enum-varnames:
    - ModelWidgetTypeGeneration
    - ModelWidgetTypeChat
  types.Namespace:
    properties:
      avatar:
        type: string
      path:
        type: string
      type:
        description: namespace types like 'user' for normal user, and 'school', 'company'
          for orgs etc.
        type: string
    type: object
  types.Organization:
    properties:
      homepage:
        type: string
      logo:
        type: string
      name:
        type: string
      org_type:
        type: string
      path:
        description: unique name of the organization
        type: string
      verified:
        type: boolean
    type: object
  types.Relations:
    properties:
      codes:
        items:
          $ref: '#/definitions/types.Code'
        type: array
      datasets:
        items:
          $ref: '#/definitions/types.Dataset'
        type: array
      models:
        items:
          $ref: '#/definitions/types.Model'
        type: array
      spaces:
        items:
          $ref: '#/definitions/types.Space'
        type: array
    type: object
  types.RepoBranchCommit:
    properties:
      id:
        type: string
    type: object
  types.RepoTag:
    properties:
      built_in:
        type: boolean
      category:
        type: string
      created_at:
        type: string
      group:
        type: string
      name:
        type: string
      show_name:
        type: string
      updated_at:
        type: string
    type: object
  types.Repository:
    properties:
      http_clone_url:
        type: string
      ssh_clone_url:
        type: string
    type: object
  types.RepositorySource:
    enum:
    - opencsg
    - local
    - huggingface
    type: string
    x-enum-varnames:
    - OpenCSGSource
    - LocalSource
    - HuggingfaceSource
  types.RepositorySyncStatus:
    enum:
    - pending
    - inprogress
    - failed
    - completed
    type: string
    x-enum-varnames:
    - SyncStatusPending
    - SyncStatusInProgress
    - SyncStatusFailed
    - SyncStatusCompleted
  types.RepositoryType:
    enum:
    - model
    - dataset
    - space
    - code
    - ""
    type: string
    x-enum-varnames:
    - ModelRepo
    - DatasetRepo
    - SpaceRepo
    - CodeRepo
    - UnknownRepo
  types.Response:
    properties:
      data: {}
      msg:
        type: string
    type: object
  types.ResponseWithTotal:
    properties:
      data: {}
      msg:
        type: string
      total:
        type: integer
    type: object
  types.RuntimeFramework:
    properties:
      container_port:
        type: integer
      enabled:
        type: integer
      frame_cpu_image:
        type: string
      frame_image:
        type: string
      frame_name:
        type: string
      frame_version:
        type: string
      id:
        type: integer
      type:
        type: integer
    type: object
  types.RuntimeFrameworkModels:
    properties:
      models:
        items:
          type: string
        type: array
    type: object
  types.RuntimeFrameworkReq:
    properties:
      container_port:
        type: integer
      enabled:
        type: integer
      frame_cpu_image:
        type: string
      frame_image:
        type: string
      frame_name:
        type: string
      frame_version:
        type: string
      type:
        type: integer
    type: object
  types.Space:
    properties:
      can_manage:
        type: boolean
      can_write:
        type: boolean
      cover_image_url:
        type: string
      created_at:
        type: string
      default_branch:
        type: string
      description:
        example: ""
        type: string
      endpoint:
        description: the serving endpoint url
        example: https://localhost/spaces/myname/myspace
        type: string
      env:
        type: string
      hardware:
        type: string
      id:
        type: integer
      license:
        example: MIT
        type: string
      like_count:
        type: integer
      name:
        example: space_name_1
        type: string
      namespace:
        $ref: '#/definitions/types.Namespace'
      nickname:
        example: ""
        type: string
      path:
        example: user_or_org_name/space_name_1
        type: string
      private:
        type: boolean
      repository:
        $ref: '#/definitions/types.Repository'
      repository_id:
        type: integer
      sdk:
        description: like gradio,steamlit etc
        example: "1"
        type: string
      sdk_version:
        example: v0.1
        type: string
      secrets:
        type: string
      sku:
        type: string
      source:
        $ref: '#/definitions/types.RepositorySource'
      status:
        description: deploying, running, failed
        type: string
      svc_name:
        type: string
      sync_status:
        $ref: '#/definitions/types.RepositorySyncStatus'
      tags:
        items:
          $ref: '#/definitions/types.RepoTag'
        type: array
      template:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/types.User'
      user_likes:
        type: boolean
      username:
        example: creator_user_name
        type: string
    type: object
  types.SpaceResource:
    properties:
      cost_per_hour:
        type: number
      id:
        type: integer
      is_available:
        type: boolean
      name:
        type: string
      resources:
        type: string
    type: object
  types.SpaceSdk:
    properties:
      id:
        type: integer
      name:
        type: string
      version:
        type: string
    type: object
  types.SyncVersion:
    properties:
      change_log:
        type: string
      last_modify_time:
        type: string
      repo_path:
        type: string
      repo_type:
        $ref: '#/definitions/types.RepositoryType'
      source_id:
        description: '0: opencsg, 1: HF'
        type: integer
      version:
        type: integer
    type: object
  types.SyncVersionResponse:
    properties:
      data:
        properties:
          has_more:
            type: boolean
          versions:
            items:
              $ref: '#/definitions/types.SyncVersion'
            type: array
        type: object
      msg:
        type: string
    type: object
  types.UpdateCodeReq:
    properties:
      description:
        type: string
      nickname:
        example: model display name
        type: string
      private:
        example: false
        type: boolean
    type: object
  types.UpdateCollectionReposReq:
    properties:
      repo_ids:
        items:
          type: integer
        type: array
    type: object
  types.UpdateDatasetReq:
    properties:
      description:
        type: string
      nickname:
        example: model display name
        type: string
      private:
        example: false
        type: boolean
    type: object
  types.UpdateFileReq:
    properties:
      branch:
        type: string
      content:
        type: string
      message:
        type: string
      new_branch:
        type: string
      origin_path:
        type: string
      repoType:
        $ref: '#/definitions/types.RepositoryType'
      sha:
        type: string
    type: object
  types.UpdateFileResp:
    type: object
  types.UpdateMirrorParams:
    properties:
      mirror_source_id:
        type: integer
      password:
        type: string
      source_url:
        type: string
      username:
        type: string
    type: object
  types.UpdateMirrorSourceReq:
    properties:
      id:
        type: integer
      info_api_url:
        type: string
      source_name:
        type: string
    required:
    - source_name
    type: object
  types.UpdateModelReq:
    properties:
      description:
        type: string
      nickname:
        example: model display name
        type: string
      private:
        example: false
        type: boolean
    type: object
  types.UpdateSpaceReq:
    properties:
      cover_image_url:
        type: string
      description:
        type: string
      env:
        type: string
      nickname:
        example: model display name
        type: string
      private:
        example: false
        type: boolean
      resource_id:
        type: integer
      sdk:
        example: "1"
        type: string
      sdk_version:
        example: v0.1
        type: string
      secrets:
        type: string
      template:
        type: string
    type: object
  types.UpdateSpaceResourceReq:
    properties:
      cost_per_hour:
        type: number
      name:
        type: string
      resources:
        type: string
    type: object
  types.UpdateSpaceSdkReq:
    properties:
      id:
        type: integer
      name:
        type: string
      version:
        type: string
    type: object
  types.User:
    properties:
      avatar:
        type: string
      bio:
        type: string
      can_change_username:
        type: boolean
      email:
        type: string
      homepage:
        type: string
      last_login_at:
        type: string
      nickname:
        type: string
      orgs:
        items:
          $ref: '#/definitions/types.Organization'
        type: array
      phone:
        type: string
      roles:
        items:
          type: string
        type: array
      username:
        type: string
      uuid:
        type: string
    type: object
info:
  contact: {}
paths:
  /{repo_type}/{namespace}/{name}/blob/{file_path}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: file path
        in: path
        name: file_path
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.File'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey or JWT: []
      summary: Get the repo file information like size, content, sha etc
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/branches:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Branch'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get the branches of repository
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/commit/{commit_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: commit id
        in: path
        name: commit_id
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.CommitResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get commit diff of repository and data field of response need to be
        decode with base64
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/commits:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Commit'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all commits of repository
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/download/{file_path}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: file path
        in: path
        name: file_path
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        type: string
      - description: file name to save as
        in: query
        name: save_as
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey or JWT: []
      summary: 'Download a repo file [Depricated: use ''resolve'' api instead]'
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/incr_downloads:
    put:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Increase repo download count by 1
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/last_commit:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.Commit'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get the last commit of repository
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/mirror:
    delete:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a mirror
      tags:
      - Repository
    get:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Mirror'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get a mirror
      tags:
      - Repository
    post:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateMirrorParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Mirror'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create mirror for a existing repository
      tags:
      - Repository
    put:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateMirrorParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Mirror'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a mirror for a existing repository
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/mirror/sync:
    post:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Triggers the mirror synchronization
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/mirror_from_saas:
    post:
      consumes:
      - application/json
      parameters:
      - description: models,datasets,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Mirror'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Mirror repo from OpenCSG Saas(only on-premises)
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/raw/{file_path}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: file path
        in: path
        name: file_path
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get the last commit of repository
      tags:
      - Repository
    post:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: the new file relative path
        in: path
        name: file_path
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      - description: create file request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/types.CreateFileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.CreateFileResp'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new file in repository
      tags:
      - Repository
    put:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: the new file relative path
        in: path
        name: file_path
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      - description: create file request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/types.UpdateFileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.UpdateFileResp'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update existing file in repository
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/resolve/{file_path}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: file path
        in: path
        name: file_path
        required: true
        type: string
      - description: branch or tag
        in: query
        name: ref
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Download a rep file
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/run:
    get:
      consumes:
      - application/json
      description: List repo deploys
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List repo deploys
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/run/{id}:
    get:
      consumes:
      - application/json
      description: Get repo deploy detail
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "401":
          description: Permission denied
          schema:
            $ref: '#/definitions/types.APIUnauthorized'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get repo deploy detail
      tags:
      - Repository
    put:
      consumes:
      - application/json
      parameters:
      - description: models
        enum:
        - models
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: deploy setting of inference
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.DeployUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update deploy parameters
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/run/{id}/logs/{instance}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: instance
        in: path
        name: instance
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "401":
          description: Permission denied
          schema:
            $ref: '#/definitions/types.APIUnauthorized'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: get deploy instance logs
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/run/{id}/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "401":
          description: Permission denied
          schema:
            $ref: '#/definitions/types.APIUnauthorized'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get deploy status
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/runtime_framework:
    get:
      consumes:
      - application/json
      description: List repo runtime framework
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      - default: 1
        description: deploy_type
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List repo runtime framework
      tags:
      - Repository
    post:
      consumes:
      - application/json
      description: create runtime framework
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.RuntimeFrameworkReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.RuntimeFramework'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create runtime framework
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/runtime_framework/{id}:
    delete:
      consumes:
      - application/json
      description: delete a exist RuntimeFramework
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exist RuntimeFramework
      tags:
      - Repository
    put:
      consumes:
      - application/json
      description: Update runtime framework
      parameters:
      - description: models,spaces
        enum:
        - models
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.RuntimeFrameworkReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.RuntimeFramework'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update runtime framework
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/tags:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Tag'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get the tags of repository
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/tags/{category}:
    post:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: current user name
        in: query
        name: current_user
        required: true
        type: string
      - description: tag category
        enum:
        - task
        - license
        - framework
        - language
        - industry
        in: path
        name: category
        required: true
        type: string
      - description: tag names in array
        in: body
        name: tags
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: update the tags of a certain category
      tags:
      - Repository
  /{repo_type}/{namespace}/{name}/tree:
    get:
      consumes:
      - application/json
      parameters:
      - description: models,dataset,codes or spaces
        enum:
        - models
        - datasets
        - codes
        - spaces
        in: path
        name: repo_type
        required: true
        type: string
      - description: repo owner name
        in: path
        name: namespace
        required: true
        type: string
      - description: repo name
        in: path
        name: name
        required: true
        type: string
      - description: root dir
        in: query
        name: path
        type: string
      - description: branch or tag
        in: query
        name: ref
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.File'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get repository file tree
      tags:
      - Repository
  /accounting/metering/{id}/statements:
    get:
      consumes:
      - application/json
      description: List meterings by user uuid and start time and end time
      parameters:
      - description: user uuid
        in: path
        name: id
        required: true
        type: string
      - default: 10
        description: scene
        enum:
        - 10
        - 11
        - 12
        - 20
        in: query
        name: scene
        type: integer
      - description: instance name
        in: query
        name: instance_name
        required: true
        type: string
      - description: 'start_time, format: ''2024-06-12 08:27:22'''
        in: query
        name: start_time
        required: true
        type: string
      - description: 'end_time, format: ''2024-06-12 17:17:22'''
        in: query
        name: end_time
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List meterings by user uuid and start time and end time
      tags:
      - Accounting
  /cluster:
    get:
      consumes:
      - application/json
      description: Get cluster list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get cluster list
      tags:
      - Cluster
  /codes:
    get:
      consumes:
      - application/json
      description: get visiable codes for current user
      parameters:
      - description: current user
        in: query
        name: current_user
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: filter by task tag
        in: query
        name: task_tag
        type: string
      - description: filter by framework tag
        in: query
        name: framework_tag
        type: string
      - description: filter by license tag
        in: query
        name: license_tag
        type: string
      - description: filter by language tag
        in: query
        name: language_tag
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      - description: source
        enum:
        - opencsg
        - huggingface
        - local
        in: query
        name: source
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Code'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visiable codes for current user
      tags:
      - Code
    post:
      consumes:
      - application/json
      description: create a new code
      parameters:
      - description: current user, the owner
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateCodeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Code'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new code
      tags:
      - Code
  /codes/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists code
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user, the owner
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists code
      tags:
      - Code
    get:
      consumes:
      - application/json
      description: get code detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Code'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get code detail
      tags:
      - Code
    put:
      consumes:
      - application/json
      description: update a exists code
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user, the owner
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateCodeReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Code'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists code
      tags:
      - Code
  /codes/{namespace}/{name}/relations:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Relations'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get code related assets
      tags:
      - Code
  /collections:
    get:
      consumes:
      - application/json
      description: get all collections
      parameters:
      - description: search text
        in: query
        name: search
        type: string
      - default: '"trending"'
        description: sort by
        in: query
        name: sort
        type: string
      - default: 50
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Collection'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      summary: get all collections
      tags:
      - Collection
    post:
      consumes:
      - application/json
      description: create a collection
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateCollectionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Collection'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: create a collection
      tags:
      - Collection
  /collections/{id}:
    delete:
      consumes:
      - application/json
      description: delete a exists collection
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: Delete a exists collection
      tags:
      - Collection
    get:
      consumes:
      - application/json
      description: get a collection detail
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Collection'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      summary: get a collection detail
      tags:
      - Collection
    put:
      consumes:
      - application/json
      description: update a collection
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateCollectionReq'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Collection'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: update a collection
      tags:
      - Collection
  /collections/{id}/repos:
    delete:
      consumes:
      - application/json
      description: remove repos from a collection
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateCollectionReposReq'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Collection'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: remove repos from a collection
      tags:
      - Collection
    post:
      consumes:
      - application/json
      description: Add repos to a collection
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateCollectionReposReq'
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Collection'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: Add repos to a collection
      tags:
      - Collection
  /datasets:
    get:
      consumes:
      - application/json
      description: get visiable datasets for current user
      parameters:
      - description: current user
        in: query
        name: current_user
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: filter by task tag
        in: query
        name: task_tag
        type: string
      - description: filter by framework tag
        in: query
        name: framework_tag
        type: string
      - description: filter by license tag
        in: query
        name: license_tag
        type: string
      - description: filter by language tag
        in: query
        name: language_tag
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      - description: source
        enum:
        - opencsg
        - huggingface
        - local
        in: query
        name: source
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Dataset'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visiable datasets for current user
      tags:
      - Dataset
    post:
      consumes:
      - application/json
      description: create a new dataset
      parameters:
      - description: current user, the owner
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateDatasetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Dataset'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new dataset
      tags:
      - Dataset
  /datasets/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists dataset
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user, the owner
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists dataset
      tags:
      - Dataset
    get:
      consumes:
      - application/json
      description: get dataset detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Dataset'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get dataset detail
      tags:
      - Dataset
    put:
      consumes:
      - application/json
      description: update a exists dataset
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user, the owner
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateDatasetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Dataset'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists dataset
      tags:
      - Dataset
  /datasets/{namespace}/{name}/all_files:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.File'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all files of a dataset
      tags:
      - Dataset
  /datasets/{namespace}/{name}/relations:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Relations'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get dataset related assets
      tags:
      - Dataset
  /datasets/{namespace}/{name}/viewer/{file_path}:
    get:
      consumes:
      - application/json
      description: get the demo data of the dataset
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: file_path
        in: path
        name: file_path
        required: true
        type: string
      - description: count
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get the demo data of the dataset
      tags:
      - Dataset
  /events:
    post:
      consumes:
      - application/json
      parameters:
      - description: Events
        in: body
        name: events
        required: true
        schema:
          items:
            $ref: '#/definitions/types.Event'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      summary: Report client events
      tags:
      - Events
  /list/datasets_by_path:
    post:
      consumes:
      - application/json
      description: list datasets by paths
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ListByPathReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.DatasetResp'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List datasets by paths
      tags:
      - List
  /list/models_by_path:
    post:
      consumes:
      - application/json
      description: list models by paths
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ListByPathReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.ModelResp'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List models by paths
      tags:
      - List
  /list/spaces_by_path:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ListByPathReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List spaces by paths
      tags:
      - List
  /mirror/repo:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateMirrorRepoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create mirror repo
      tags:
      - Mirror
  /mirror/repos:
    get:
      consumes:
      - application/json
      parameters:
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.MirrorRepo'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get mirror repos
      tags:
      - Mirror
  /mirror/sources:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.MirrorSource'
                  type: array
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get mirror sources
      tags:
      - Mirror
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateMirrorSourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.MirrorSource'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create mirror source
      tags:
      - Mirror
  /mirror/sources/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete mirror source
      tags:
      - Mirror
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.MirrorSource'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get mirror source
      tags:
      - Mirror
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateMirrorSourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.MirrorSource'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update mirror source
      tags:
      - Mirror
  /models:
    get:
      consumes:
      - application/json
      description: get visiable models for current user
      parameters:
      - description: current user
        in: query
        name: current_user
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: filter by task tag
        in: query
        name: task_tag
        type: string
      - description: filter by framework tag
        in: query
        name: framework_tag
        type: string
      - description: filter by license tag
        in: query
        name: license_tag
        type: string
      - description: filter by language tag
        in: query
        name: language_tag
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      - description: source
        enum:
        - opencsg
        - huggingface
        - local
        in: query
        name: source
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Model'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visiable models for current user
      tags:
      - Model
    post:
      consumes:
      - application/json
      description: create a new model
      parameters:
      - description: current user
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateModelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Model'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new model
      tags:
      - Model
  /models/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists model
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user, the model owner
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists model
      tags:
      - Model
    get:
      consumes:
      - application/json
      description: get model detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Model'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get model detail
      tags:
      - Model
    put:
      consumes:
      - application/json
      description: update a exists model
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user, the model owner
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateModelReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.Model'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists model
      tags:
      - Model
  /models/{namespace}/{name}/all_files:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.File'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all files of a model
      tags:
      - Model
  /models/{namespace}/{name}/finetune:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: deploy setting of instance
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.InstanceRunReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: create a finetune instance
      tags:
      - Model
  /models/{namespace}/{name}/finetune/{id}:
    delete:
      consumes:
      - application/json
      description: delete a finetune instance
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a finetune instance
      tags:
      - Model
  /models/{namespace}/{name}/finetune/{id}/start:
    put:
      consumes:
      - application/json
      description: Start a finetune instance
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Start a finetune instance
      tags:
      - Model
  /models/{namespace}/{name}/finetune/{id}/stop:
    put:
      consumes:
      - application/json
      description: Stop a finetune instance
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Stop a finetune instance
      tags:
      - Model
  /models/{namespace}/{name}/predict:
    post:
      consumes:
      - application/json
      description: invoke model prediction
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      - description: input for model prediction
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ModelPredictReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Invoke model prediction
      tags:
      - Model
  /models/{namespace}/{name}/relations:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Relations'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get model related assets
      tags:
      - Model
  /models/{namespace}/{name}/run:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: deploy setting of inference
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ModelRunReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: run model as inference
      tags:
      - Model
  /models/{namespace}/{name}/run/{id}:
    delete:
      consumes:
      - application/json
      description: delete a model inference
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a model inference
      tags:
      - Model
  /models/{namespace}/{name}/run/{id}/start:
    put:
      consumes:
      - application/json
      description: Start a model inference
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Start a model inference
      tags:
      - Model
  /models/{namespace}/{name}/run/{id}/stop:
    put:
      consumes:
      - application/json
      description: Stop a model inference
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Stop a model inference
      tags:
      - Model
  /models/{namespace}/{name}/serverless:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get model serverless
      tags:
      - Model
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: deploy setting of serverless
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.ModelRunReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: run model as serverless service
      tags:
      - Model
  /models/{namespace}/{name}/serverless/{id}:
    get:
      consumes:
      - application/json
      description: Get repo serverless detail
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get repo serverless detail
      tags:
      - Model
    put:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: deploy setting of Serverless
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.DeployUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update serverless parameters
      tags:
      - Model
  /models/{namespace}/{name}/serverless/{id}/logs/{instance}:
    get:
      consumes:
      - application/json
      parameters:
      - description: models
        enum:
        - models
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: instance
        in: path
        name: instance
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: get serverless logs
      tags:
      - Model
  /models/{namespace}/{name}/serverless/{id}/start:
    put:
      consumes:
      - application/json
      description: Start a model serverless
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Start a model serverless
      tags:
      - Model
  /models/{namespace}/{name}/serverless/{id}/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: deploy id
        in: path
        name: id
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get serverless status
      tags:
      - Model
  /models/{namespace}/{name}/serverless/{id}/stop:
    put:
      consumes:
      - application/json
      description: Stop a model serverless
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Stop a model serverless
      tags:
      - Model
  /models/runtime_framework:
    get:
      consumes:
      - application/json
      description: List repo runtime framework
      parameters:
      - description: models
        enum:
        - models
        in: path
        name: repo_type
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      - default: 1
        description: deploy_type
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: List repo runtime framework
      tags:
      - Repository
  /recom/opweight:
    post:
      consumes:
      - application/json
      parameters:
      - description: json request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.SetOpWeight.SetOpWeightReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: set op weight for repo recommendation
      tags:
      - Recommendation
  /runtime_framework:
    get:
      consumes:
      - application/json
      description: get all runtime frameworks for current user
      parameters:
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all runtime frameworks for current user
      tags:
      - RuntimeFramework
  /runtime_framework/{id}:
    delete:
      consumes:
      - application/json
      description: set model runtime frameworks
      parameters:
      - description: runtime framework id
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: deploy_type
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.RuntimeFrameworkModels'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Set model runtime frameworks
      tags:
      - RuntimeFramework
    post:
      consumes:
      - application/json
      description: set model runtime frameworks
      parameters:
      - description: runtime framework id
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: deploy_type
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.RuntimeFrameworkModels'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Set model runtime frameworks
      tags:
      - RuntimeFramework
  /runtime_framework/{id}/models:
    get:
      consumes:
      - application/json
      description: get visible models by runtime framework for current user
      parameters:
      - description: runtime framework id
        in: path
        name: id
        required: true
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      - default: 1
        description: deploy_type
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visible models by runtime framework for current user
      tags:
      - RuntimeFramework
  /runtime_framework/models:
    get:
      consumes:
      - application/json
      description: get visible models for all runtime frameworks for current user
      parameters:
      - description: search text
        in: query
        name: search
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      - description: current user
        in: query
        name: current_user
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      - default: 1
        description: deploy_type
        enum:
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get Visible models for all runtime frameworks for current user
      tags:
      - RuntimeFramework
  /space_resources:
    get:
      consumes:
      - application/json
      description: get space resources
      parameters:
      - description: cluster_id
        in: query
        name: cluster_id
        type: string
      - default: 1
        description: deploy type(0-space,1-inference,2-finetune)
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.SpaceResource'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get space resources
      tags:
      - SpaceReource
    post:
      consumes:
      - application/json
      description: create space resource
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSpaceResourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceResource'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create space resource
      tags:
      - SpaceReource
  /space_resources/{id}:
    delete:
      consumes:
      - application/json
      description: delete a exist space resource
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exist space resource
      tags:
      - SpaceReource
    put:
      consumes:
      - application/json
      description: update a exist space resource
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSpaceResourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceResource'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exist space resource
      tags:
      - SpaceReource
  /space_sdks:
    get:
      consumes:
      - application/json
      description: get space sdks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.SpaceSdk'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get space sdks
      tags:
      - SpaceSdk
    post:
      consumes:
      - application/json
      description: create space sdk
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSpaceSdkReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceSdk'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create space sdk
      tags:
      - SpaceSdk
  /space_sdks/{id}:
    delete:
      consumes:
      - application/json
      description: delete a exist space sdk
      parameters:
      - description: id
        in: path
        name: 写id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exist space sdk
      tags:
      - SpaceSdk
    put:
      consumes:
      - application/json
      description: update a exist space sdk
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSpaceSdkReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  $ref: '#/definitions/types.SpaceSdk'
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exist space sdk
      tags:
      - SpaceSdk
  /spaces:
    get:
      consumes:
      - application/json
      description: get spaces visible to current user
      parameters:
      - description: current user
        in: query
        name: current_user
        type: string
      - description: search text
        in: query
        name: search
        type: string
      - description: filter by task tag
        in: query
        name: task_tag
        type: string
      - description: filter by framework tag
        in: query
        name: framework_tag
        type: string
      - description: filter by license tag
        in: query
        name: license_tag
        type: string
      - description: filter by language tag
        in: query
        name: language_tag
        type: string
      - description: sort by
        in: query
        name: sort
        type: string
      - description: source
        enum:
        - opencsg
        - huggingface
        - local
        in: query
        name: source
        type: string
      - default: 20
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: per page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get spaces visible to current user
      tags:
      - Space
    post:
      consumes:
      - application/json
      description: create a new space
      parameters:
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSpaceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Space'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new space
      tags:
      - Space
  /spaces/{namespace}/{name}:
    delete:
      consumes:
      - application/json
      description: delete a exists space
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete a exists space
      tags:
      - Space
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Space'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: show space detail
      tags:
      - Space
    put:
      consumes:
      - application/json
      description: update a exists space
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.UpdateSpaceReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.Space'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Update a exists space
      tags:
      - Space
  /spaces/{namespace}/{name}/logs:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get space logs
      tags:
      - Space
  /spaces/{namespace}/{name}/run:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: run space app
      tags:
      - Space
  /spaces/{namespace}/{name}/status:
    get:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: get space status
      tags:
      - Space
  /spaces/{namespace}/{name}/stop:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: stop space app
      tags:
      - Space
  /spaces/{namespace}/{name}/wakeup:
    post:
      consumes:
      - application/json
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - JWT token: []
      summary: wake up space app
      tags:
      - Space
  /sync/client_setting:
    get:
      consumes:
      - application/json
      description: Get sync client setting
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.SyncClientSetting'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get sync client setting
      tags:
      - Sync
    post:
      consumes:
      - application/json
      description: Create sync client setting or update an existing sync client setting
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSyncClientSettingReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.SyncClientSetting'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create sync client setting or update an existing sync client setting
      tags:
      - Sync
  /sync/version/latest:
    get:
      parameters:
      - description: current version
        in: query
        name: cur
        required: true
        type: string
      - description: current_user
        in: query
        name: current_user
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/types.SyncVersionResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get latest version
      tags:
      - Sync
  /tags:
    get:
      consumes:
      - application/json
      description: get all tags
      produces:
      - application/json
      responses:
        "200":
          description: tags
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.Tag'
                  type: array
                total:
                  type: integer
              type: object
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all tags
      tags:
      - Tag
  /telemetry/usage:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/telemetry.Usage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Submit telemetry data for a client
      tags:
      - Telemetry
  /user/{username}/codes:
    get:
      consumes:
      - application/json
      description: get user codes
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Code'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user codes
      tags:
      - User
  /user/{username}/collections:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Collection'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user's collections
      tags:
      - User
  /user/{username}/datasets:
    get:
      consumes:
      - application/json
      description: get user datasets
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Dataset'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user datasets
      tags:
      - User
  /user/{username}/finetune/instances:
    get:
      consumes:
      - application/json
      description: Get user running notebook instances
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - default: 50
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: page index
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user running notebook instances
      tags:
      - User
  /user/{username}/likes/{repoid}:
    delete:
      consumes:
      - application/json
      description: Delete user likes
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: repo id
        in: path
        name: repo_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete user likes
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: repo id
        in: path
        name: repo_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Add user likes
      tags:
      - User
  /user/{username}/likes/codes:
    get:
      consumes:
      - application/json
      description: get user likes codes
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Code'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user likes codes
      tags:
      - User
  /user/{username}/likes/collections:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Collection'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user likes collections
      tags:
      - User
  /user/{username}/likes/collections/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: collection id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: delete collection likes
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: collection id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Add collection likes
      tags:
      - User
  /user/{username}/likes/datasets:
    get:
      consumes:
      - application/json
      description: get user likes datasets
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Dataset'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user likes datasets
      tags:
      - User
  /user/{username}/likes/models:
    get:
      consumes:
      - application/json
      description: get user likes models
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Model'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user likes models
      tags:
      - User
  /user/{username}/likes/spaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user likes spaces
      tags:
      - User
  /user/{username}/models:
    get:
      consumes:
      - application/json
      description: get user models
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Model'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user models
      tags:
      - User
  /user/{username}/run/{repo_type}:
    get:
      consumes:
      - application/json
      description: Get user running deploys
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: model,space
        enum:
        - model
        - space
        in: path
        name: repo_type
        required: true
        type: string
      - default: 1
        description: deploy type(0-space,1-inference,2-finetune)
        enum:
        - 0
        - 1
        - 2
        in: query
        name: deploy_type
        type: integer
      - default: 50
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: page index
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user running deploys
      tags:
      - User
  /user/{username}/run/serverless:
    get:
      consumes:
      - application/json
      description: Get serverless deploys
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - default: 50
        description: per
        in: query
        name: per
        type: integer
      - default: 1
        description: page index
        in: query
        name: page
        type: integer
      - description: current user
        in: query
        name: current_user
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get serverless deploys
      tags:
      - User
  /user/{username}/spaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Space'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get user spaces
      tags:
      - User
  /user/{username}/ssh_key/{name}:
    delete:
      consumes:
      - application/json
      description: delete specific SSH key for the given user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: key name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Delete specific SSH key for the given user
      tags:
      - SSH Key
  /user/{username}/ssh_keys:
    get:
      consumes:
      - application/json
      description: get all SSH keys for the given user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ResponseWithTotal'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/database.SSHKey'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Get all SSH keys for the given user
      tags:
      - SSH Key
    post:
      consumes:
      - application/json
      description: create a new SSH key for the given user
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/types.CreateSSHKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.Response'
            - properties:
                data:
                  $ref: '#/definitions/database.SSHKey'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/types.APIBadRequest'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/types.APIInternalServerError'
      security:
      - ApiKey: []
      summary: Create a new SSH key for the given user
      tags:
      - SSH Key
securityDefinitions:
  ApiKey:
    description: Bearer token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
