// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/datasets": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get visiable datasets for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get Visiable datasets for current user",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "per",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "per page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Dataset"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create a new dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Create a new dataset",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateDatasetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current_user",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update a exists dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Update a exists dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateDatasetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "delete a exists dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Delete a exists dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current_user",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/blob/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset file info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset file info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Commit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/branches": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset branches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset branches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "per",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Branch"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/commits": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset commits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset commits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Commit"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/download/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "download dataset file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Download dataset file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "lfs",
                        "name": "lfs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name of download file",
                        "name": "save_as",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/last_commit": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset last commit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset last commit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Commit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/raw/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset file raw",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset file raw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Commit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update dataset file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Update dataset file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.UpdateFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create dataset file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Create dataset file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreateFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/resolve/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "download dataset file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Download dataset file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/tags": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Branch"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/tree": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get dataset file tree",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get dataset file tree",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.File"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/update_downloads": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update dataset downloads",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Update dataset downloads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateDownloadsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.File"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/upload_file": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "upload dataset file to create or update a file in dataset repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Create dataset file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "message",
                        "name": "message",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "branch",
                        "name": "branch",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreateFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/datasets/{namespace}/{name}/viewer/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get the demo data of the dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "Get the demo data of the dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "count",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/list/datasets_by_path": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "list datasets by paths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "List datasets by paths",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ListByPathReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.DatasetResp"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/list/models_by_path": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "list models by paths",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "List"
                ],
                "summary": "List models by paths",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ListByPathReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.ModelResp"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get visiable models for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get Visiable models for current user",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "per",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "per page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "current_user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Model"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create a new model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Create a new model",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateModelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.Model"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current_user",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Model"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update a exists model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Update a exists model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateModelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.Model"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "delete a exists model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Delete a exists model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current_user",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/blob/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model file info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model file info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Commit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/branches": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model branches",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model branches",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "per",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Branch"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/commits": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model commits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model commits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Commit"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/download/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "download model file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Download model file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "lfs",
                        "name": "lfs",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name of download file",
                        "name": "save_as",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/last_commit": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model last commit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model last commit",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Commit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/predict": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "invoke model prediction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Invoke model prediction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "input for model prediction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ModelPredictReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/raw/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model file raw",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model file raw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Commit"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update model file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Update model file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.UpdateFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create model file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Create model file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateFileReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreateFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/resolve/{file_path}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "download model file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/octet-stream"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Download model file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/tags": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Branch"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/tree": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get model file tree",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Get model file tree",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ref",
                        "name": "ref",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.File"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/update_downloads": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update model downloads",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Update model downloads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateDownloadsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.File"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/models/{namespace}/{name}/upload_file": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "upload model file to create or update a file in model repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model"
                ],
                "summary": "Upload model file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_path",
                        "name": "file_path",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "message",
                        "name": "message",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "branch",
                        "name": "branch",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.CreateFileResp"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/organization/{namespace}/datasets": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get organization datasets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get organization datasets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current user name",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Dataset"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/organization/{namespace}/models": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get organization models",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get organization models",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org name",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "current user name",
                        "name": "current_user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "current page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Model"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get organizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.Organization"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateOrgReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.Organization"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/organizations/{name}": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.EditOrgReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.Organization"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "delete organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.DeleteOrgReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/organizations/{name}/members": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "user will be added to org with a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Create new membership between org and user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Create.addMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/organizations/{name}/members/{username}": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "user's role will be remove from org",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Member"
                ],
                "summary": "Remove membership between org and user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "org name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.Delete.removeMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/spaces": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get spaces visible to current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Get spaces visible to current user",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "per",
                        "name": "per",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "per page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "current_user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search text",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort by",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Space"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create a new space",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Create a new space",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateSpaceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/types.Space"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{namespace}/{name}/api/{api_name}": {
            "post": {
                "security": [
                    {
                        "JWT token": []
                    }
                ],
                "description": "call space api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Call space api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "api_name",
                        "name": "api_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get all tags",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Get all tags",
                "responses": {
                    "200": {
                        "description": "tags",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.Tag"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/user/{username}/datasets": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get user datasets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user datasets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Dataset"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/user/{username}/models": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get user models",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user models",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/types.Model"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/user/{username}/ssh_key/{name}": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "delete specific SSH key for the given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSH Key"
                ],
                "summary": "Delete specific SSH key for the given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "key name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/user/{username}/ssh_keys": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "get all SSH keys for the given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSH Key"
                ],
                "summary": "Get all SSH keys for the given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.ResponseWithTotal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/database.SSHKey"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create a new SSH key for the given user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSH Key"
                ],
                "summary": "Create a new SSH key for the given user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateSSHKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.SSHKey"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/user/{username}/tokens": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create access token for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access token"
                ],
                "summary": "Create access token for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.AccessToken"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/user/{username}/tokens/{token_name}": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "delete access token for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Access token"
                ],
                "summary": "Delete access token for a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token_name",
                        "name": "token_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.DeleteUserTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/database.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/types.APIBadRequest"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/types.APIInternalServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.AccessToken": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "git_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.Dataset": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_updated_at": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/database.Repository"
                },
                "repository_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Model": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_updated_at": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/database.Repository"
                },
                "repository_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.Namespace": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "namespace_type": {
                    "$ref": "#/definitions/database.NamespaceType"
                },
                "path": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.NamespaceType": {
            "type": "string",
            "enum": [
                "user",
                "organization"
            ],
            "x-enum-varnames": [
                "UserNamespace",
                "OrgNamespace"
            ]
        },
        "database.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "git_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "$ref": "#/definitions/database.Namespace"
                },
                "namespace_id": {
                    "type": "integer"
                },
                "path": {
                    "description": "unique name of the organization",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.Repository": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "default_branch": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "downloads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.RepositoryDownload"
                    }
                },
                "git_path": {
                    "type": "string"
                },
                "http_clone_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "labels": {
                    "description": "Depreated",
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "readme": {
                    "description": "Depreated",
                    "type": "string"
                },
                "repository_type": {
                    "$ref": "#/definitions/types.RepositoryType"
                },
                "ssh_clone_url": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Tag"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.RepositoryDownload": {
            "type": "object",
            "properties": {
                "click_download_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "repository": {
                    "$ref": "#/definitions/database.Repository"
                },
                "repository_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.SSHKey": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "git_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.Tag": {
            "type": "object",
            "properties": {
                "built_in": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/database.TagScope"
                },
                "show_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "database.TagScope": {
            "type": "string",
            "enum": [
                "model",
                "dataset"
            ],
            "x-enum-varnames": [
                "ModelTagScope",
                "DatasetTagScope"
            ]
        },
        "database.User": {
            "type": "object",
            "properties": {
                "accessTokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.AccessToken"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "git_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.Namespace"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.Create.addMemberRequest": {
            "type": "object",
            "properties": {
                "op_user": {
                    "description": "name of the operator",
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user": {
                    "description": "name of user will be added to the org as a member",
                    "type": "string"
                }
            }
        },
        "handler.Delete.removeMemberRequest": {
            "type": "object",
            "properties": {
                "op_user": {
                    "description": "name of the operator",
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "types.APIBadRequest": {
            "type": "object"
        },
        "types.APIInternalServerError": {
            "type": "object"
        },
        "types.Branch": {
            "type": "object",
            "properties": {
                "commit": {
                    "$ref": "#/definitions/types.RepoBranchCommit"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "types.Commit": {
            "type": "object",
            "properties": {
                "author_email": {
                    "type": "string"
                },
                "author_name": {
                    "type": "string"
                },
                "authored_date": {
                    "type": "string"
                },
                "committer_date": {
                    "type": "string"
                },
                "committer_email": {
                    "type": "string"
                },
                "committer_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "types.CreateDatasetReq": {
            "type": "object",
            "properties": {
                "default_branch": {
                    "type": "string",
                    "example": "main"
                },
                "description": {
                    "type": "string"
                },
                "labels": {
                    "type": "string",
                    "example": ""
                },
                "license": {
                    "type": "string",
                    "example": "MIT"
                },
                "name": {
                    "type": "string",
                    "example": "model_name_1"
                },
                "namespace": {
                    "type": "string",
                    "example": "user_or_org_name"
                },
                "nickname": {
                    "type": "string",
                    "example": "model display name"
                },
                "private": {
                    "type": "boolean"
                },
                "readme": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "creator_user_name"
                }
            }
        },
        "types.CreateFileReq": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "new_branch": {
                    "type": "string"
                },
                "repoType": {
                    "$ref": "#/definitions/types.RepositoryType"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.CreateFileResp": {
            "type": "object"
        },
        "types.CreateModelReq": {
            "type": "object",
            "properties": {
                "default_branch": {
                    "type": "string",
                    "example": "main"
                },
                "description": {
                    "type": "string"
                },
                "labels": {
                    "type": "string",
                    "example": ""
                },
                "license": {
                    "type": "string",
                    "example": "MIT"
                },
                "name": {
                    "type": "string",
                    "example": "model_name_1"
                },
                "namespace": {
                    "type": "string",
                    "example": "user_or_org_name"
                },
                "nickname": {
                    "type": "string",
                    "example": "model display name"
                },
                "private": {
                    "type": "boolean"
                },
                "readme": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "creator_user_name"
                }
            }
        },
        "types.CreateOrgReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "org description"
                },
                "full_name": {
                    "description": "Display name",
                    "type": "string",
                    "example": "org display name"
                },
                "name": {
                    "description": "Org unique identifier",
                    "type": "string",
                    "example": "org_name_1"
                },
                "username": {
                    "type": "string",
                    "example": "user_name_1"
                }
            }
        },
        "types.CreateSSHKeyRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.CreateSpaceReq": {
            "type": "object",
            "properties": {
                "default_branch": {
                    "type": "string",
                    "example": "main"
                },
                "description": {
                    "type": "string"
                },
                "labels": {
                    "type": "string",
                    "example": ""
                },
                "license": {
                    "type": "string",
                    "example": "MIT"
                },
                "name": {
                    "type": "string",
                    "example": "model_name_1"
                },
                "namespace": {
                    "type": "string",
                    "example": "user_or_org_name"
                },
                "nickname": {
                    "type": "string",
                    "example": "model display name"
                },
                "private": {
                    "type": "boolean"
                },
                "readme": {
                    "type": "string"
                },
                "sdk": {
                    "description": "Creator   string ` + "`" + `json:\"username\" example:\"creator_user_name\"` + "`" + `\nNamespace string ` + "`" + `json:\"namespace\" example:\"user_or_org_name\"` + "`" + `\nName      string ` + "`" + `json:\"name\" example:\"space_name_1\"` + "`" + `\nLicense   string ` + "`" + `json:\"license\" example:\"MIT\"` + "`" + `",
                    "type": "string",
                    "example": "gradio"
                },
                "username": {
                    "type": "string",
                    "example": "creator_user_name"
                }
            }
        },
        "types.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "Display name of the user",
                    "type": "string"
                },
                "username": {
                    "description": "the login name",
                    "type": "string"
                }
            }
        },
        "types.CreateUserTokenRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.Dataset": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "default_branch": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "downloads": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "repository": {
                    "$ref": "#/definitions/types.Repository"
                },
                "repository_id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RepoTag"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/types.User"
                }
            }
        },
        "types.DatasetResp": {
            "type": "object",
            "properties": {
                "downloads": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "types.DeleteOrgReq": {
            "type": "object",
            "properties": {
                "current_user": {
                    "type": "string"
                }
            }
        },
        "types.DeleteUserTokenRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.EditOrgReq": {
            "type": "object",
            "properties": {
                "current_user": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "org description"
                },
                "full_name": {
                    "description": "Display name",
                    "type": "string",
                    "example": "org display name"
                }
            }
        },
        "types.File": {
            "type": "object",
            "properties": {
                "commit": {
                    "$ref": "#/definitions/types.Commit"
                },
                "content": {
                    "type": "string"
                },
                "download_url": {
                    "description": "URL to download the file, same with URL, except for lfs file",
                    "type": "string"
                },
                "last_commit_sha": {
                    "type": "string"
                },
                "lfs": {
                    "type": "boolean"
                },
                "lfs_relative_path": {
                    "description": "relative path in lfs storage",
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "description": "URL to browse the file",
                    "type": "string"
                }
            }
        },
        "types.ListByPathReq": {
            "type": "object",
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.Model": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "default_branch": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "downloads": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "repository": {
                    "$ref": "#/definitions/types.Repository"
                },
                "repository_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "url to interact with the model",
                    "type": "string",
                    "example": "RUNNING"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RepoTag"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/types.User"
                },
                "widget_type": {
                    "description": "widget UI style: generation,chat",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.ModelWidgetType"
                        }
                    ],
                    "example": "generation"
                }
            }
        },
        "types.ModelPredictReq": {
            "type": "object",
            "properties": {
                "current_user": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "types.ModelResp": {
            "type": "object",
            "properties": {
                "downloads": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "private": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "types.ModelWidgetType": {
            "type": "string",
            "enum": [
                "generation",
                "chat"
            ],
            "x-enum-varnames": [
                "ModelWidgetTypeGeneration",
                "ModelWidgetTypeChat"
            ]
        },
        "types.RepoBranchCommit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "types.RepoTag": {
            "type": "object",
            "properties": {
                "built_in": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "show_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "types.Repository": {
            "type": "object",
            "properties": {
                "http_clone_url": {
                    "type": "string"
                },
                "ssh_clone_url": {
                    "type": "string"
                }
            }
        },
        "types.RepositoryType": {
            "type": "string",
            "enum": [
                "model",
                "dataset",
                "space",
                "code",
                ""
            ],
            "x-enum-varnames": [
                "ModelRepo",
                "DatasetRepo",
                "SpaceRepo",
                "CodeRepo",
                "UnknownRepo"
            ]
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "types.ResponseWithTotal": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "types.Space": {
            "type": "object",
            "properties": {
                "cover_img": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "endpoint": {
                    "description": "the serving endpoint url",
                    "type": "string",
                    "example": "https://localhost/spaces/myname/myspace"
                },
                "license": {
                    "type": "string",
                    "example": "MIT"
                },
                "like_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "space_name_1"
                },
                "namespace": {
                    "type": "string",
                    "example": "user_or_org_name"
                },
                "path": {
                    "type": "string",
                    "example": "user_or_org_name/space_name_1"
                },
                "private": {
                    "type": "boolean"
                },
                "running_status": {
                    "description": "deploying, running, failed",
                    "type": "string"
                },
                "sdk": {
                    "description": "like gradio,steamlit etc",
                    "type": "string",
                    "example": "gradio"
                },
                "username": {
                    "type": "string",
                    "example": "creator_user_name"
                }
            }
        },
        "types.UpdateDatasetReq": {
            "type": "object",
            "properties": {
                "default_branch": {
                    "type": "string",
                    "example": "main"
                },
                "description": {
                    "type": "string"
                },
                "labels": {
                    "type": "string",
                    "example": ""
                },
                "license": {
                    "type": "string",
                    "example": "MIT"
                },
                "name": {
                    "type": "string",
                    "example": "model_name_1"
                },
                "namespace": {
                    "type": "string",
                    "example": "user_or_org_name"
                },
                "nickname": {
                    "type": "string",
                    "example": "model display name"
                },
                "private": {
                    "type": "boolean"
                },
                "readme": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "creator_user_name"
                }
            }
        },
        "types.UpdateDownloadsReq": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "download_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "repoType": {
                    "$ref": "#/definitions/types.RepositoryType"
                }
            }
        },
        "types.UpdateFileReq": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "new_branch": {
                    "type": "string"
                },
                "origin_path": {
                    "type": "string"
                },
                "repoType": {
                    "$ref": "#/definitions/types.RepositoryType"
                },
                "sha": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "types.UpdateFileResp": {
            "type": "object"
        },
        "types.UpdateModelReq": {
            "type": "object",
            "properties": {
                "default_branch": {
                    "type": "string",
                    "example": "main"
                },
                "description": {
                    "type": "string"
                },
                "labels": {
                    "type": "string",
                    "example": ""
                },
                "license": {
                    "type": "string",
                    "example": "MIT"
                },
                "name": {
                    "type": "string",
                    "example": "model_name_1"
                },
                "namespace": {
                    "type": "string",
                    "example": "user_or_org_name"
                },
                "nickname": {
                    "type": "string",
                    "example": "model display name"
                },
                "private": {
                    "type": "boolean"
                },
                "readme": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "creator_user_name"
                }
            }
        },
        "types.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "Display name of the user",
                    "type": "string"
                },
                "username": {
                    "description": "the login name",
                    "type": "string"
                }
            }
        },
        "types.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKey": {
            "description": "Bearer token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
