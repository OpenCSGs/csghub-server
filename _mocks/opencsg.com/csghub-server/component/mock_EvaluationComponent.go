// Code generated by mockery v2.53.0. DO NOT EDIT.

package component

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	types "opencsg.com/csghub-server/common/types"
)

// MockEvaluationComponent is an autogenerated mock type for the EvaluationComponent type
type MockEvaluationComponent struct {
	mock.Mock
}

type MockEvaluationComponent_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEvaluationComponent) EXPECT() *MockEvaluationComponent_Expecter {
	return &MockEvaluationComponent_Expecter{mock: &_m.Mock}
}

// CreateEvaluation provides a mock function with given fields: ctx, req
func (_m *MockEvaluationComponent) CreateEvaluation(ctx context.Context, req types.EvaluationReq) (*types.ArgoWorkFlowRes, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for CreateEvaluation")
	}

	var r0 *types.ArgoWorkFlowRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, types.EvaluationReq) (*types.ArgoWorkFlowRes, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, types.EvaluationReq) *types.ArgoWorkFlowRes); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.ArgoWorkFlowRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, types.EvaluationReq) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockEvaluationComponent_CreateEvaluation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateEvaluation'
type MockEvaluationComponent_CreateEvaluation_Call struct {
	*mock.Call
}

// CreateEvaluation is a helper method to define mock.On call
//   - ctx context.Context
//   - req types.EvaluationReq
func (_e *MockEvaluationComponent_Expecter) CreateEvaluation(ctx interface{}, req interface{}) *MockEvaluationComponent_CreateEvaluation_Call {
	return &MockEvaluationComponent_CreateEvaluation_Call{Call: _e.mock.On("CreateEvaluation", ctx, req)}
}

func (_c *MockEvaluationComponent_CreateEvaluation_Call) Run(run func(ctx context.Context, req types.EvaluationReq)) *MockEvaluationComponent_CreateEvaluation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.EvaluationReq))
	})
	return _c
}

func (_c *MockEvaluationComponent_CreateEvaluation_Call) Return(_a0 *types.ArgoWorkFlowRes, _a1 error) *MockEvaluationComponent_CreateEvaluation_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockEvaluationComponent_CreateEvaluation_Call) RunAndReturn(run func(context.Context, types.EvaluationReq) (*types.ArgoWorkFlowRes, error)) *MockEvaluationComponent_CreateEvaluation_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteEvaluation provides a mock function with given fields: ctx, req
func (_m *MockEvaluationComponent) DeleteEvaluation(ctx context.Context, req types.ArgoWorkFlowDeleteReq) error {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for DeleteEvaluation")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.ArgoWorkFlowDeleteReq) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockEvaluationComponent_DeleteEvaluation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteEvaluation'
type MockEvaluationComponent_DeleteEvaluation_Call struct {
	*mock.Call
}

// DeleteEvaluation is a helper method to define mock.On call
//   - ctx context.Context
//   - req types.ArgoWorkFlowDeleteReq
func (_e *MockEvaluationComponent_Expecter) DeleteEvaluation(ctx interface{}, req interface{}) *MockEvaluationComponent_DeleteEvaluation_Call {
	return &MockEvaluationComponent_DeleteEvaluation_Call{Call: _e.mock.On("DeleteEvaluation", ctx, req)}
}

func (_c *MockEvaluationComponent_DeleteEvaluation_Call) Run(run func(ctx context.Context, req types.ArgoWorkFlowDeleteReq)) *MockEvaluationComponent_DeleteEvaluation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.ArgoWorkFlowDeleteReq))
	})
	return _c
}

func (_c *MockEvaluationComponent_DeleteEvaluation_Call) Return(_a0 error) *MockEvaluationComponent_DeleteEvaluation_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockEvaluationComponent_DeleteEvaluation_Call) RunAndReturn(run func(context.Context, types.ArgoWorkFlowDeleteReq) error) *MockEvaluationComponent_DeleteEvaluation_Call {
	_c.Call.Return(run)
	return _c
}

// GetEvaluation provides a mock function with given fields: ctx, req
func (_m *MockEvaluationComponent) GetEvaluation(ctx context.Context, req types.EvaluationGetReq) (*types.EvaluationRes, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for GetEvaluation")
	}

	var r0 *types.EvaluationRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, types.EvaluationGetReq) (*types.EvaluationRes, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, types.EvaluationGetReq) *types.EvaluationRes); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.EvaluationRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, types.EvaluationGetReq) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockEvaluationComponent_GetEvaluation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEvaluation'
type MockEvaluationComponent_GetEvaluation_Call struct {
	*mock.Call
}

// GetEvaluation is a helper method to define mock.On call
//   - ctx context.Context
//   - req types.EvaluationGetReq
func (_e *MockEvaluationComponent_Expecter) GetEvaluation(ctx interface{}, req interface{}) *MockEvaluationComponent_GetEvaluation_Call {
	return &MockEvaluationComponent_GetEvaluation_Call{Call: _e.mock.On("GetEvaluation", ctx, req)}
}

func (_c *MockEvaluationComponent_GetEvaluation_Call) Run(run func(ctx context.Context, req types.EvaluationGetReq)) *MockEvaluationComponent_GetEvaluation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.EvaluationGetReq))
	})
	return _c
}

func (_c *MockEvaluationComponent_GetEvaluation_Call) Return(_a0 *types.EvaluationRes, _a1 error) *MockEvaluationComponent_GetEvaluation_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockEvaluationComponent_GetEvaluation_Call) RunAndReturn(run func(context.Context, types.EvaluationGetReq) (*types.EvaluationRes, error)) *MockEvaluationComponent_GetEvaluation_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockEvaluationComponent creates a new instance of MockEvaluationComponent. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEvaluationComponent(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEvaluationComponent {
	mock := &MockEvaluationComponent{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
