// Code generated by mockery v2.53.0. DO NOT EDIT.

package component

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	types "opencsg.com/csghub-server/common/types"
)

// MockFinetuneComponent is an autogenerated mock type for the FinetuneComponent type
type MockFinetuneComponent struct {
	mock.Mock
}

type MockFinetuneComponent_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFinetuneComponent) EXPECT() *MockFinetuneComponent_Expecter {
	return &MockFinetuneComponent_Expecter{mock: &_m.Mock}
}

// CreateFinetuneJob provides a mock function with given fields: ctx, req
func (_m *MockFinetuneComponent) CreateFinetuneJob(ctx context.Context, req types.FinetuneReq) (*types.ArgoWorkFlowRes, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for CreateFinetuneJob")
	}

	var r0 *types.ArgoWorkFlowRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, types.FinetuneReq) (*types.ArgoWorkFlowRes, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, types.FinetuneReq) *types.ArgoWorkFlowRes); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.ArgoWorkFlowRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, types.FinetuneReq) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockFinetuneComponent_CreateFinetuneJob_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateFinetuneJob'
type MockFinetuneComponent_CreateFinetuneJob_Call struct {
	*mock.Call
}

// CreateFinetuneJob is a helper method to define mock.On call
//   - ctx context.Context
//   - req types.FinetuneReq
func (_e *MockFinetuneComponent_Expecter) CreateFinetuneJob(ctx interface{}, req interface{}) *MockFinetuneComponent_CreateFinetuneJob_Call {
	return &MockFinetuneComponent_CreateFinetuneJob_Call{Call: _e.mock.On("CreateFinetuneJob", ctx, req)}
}

func (_c *MockFinetuneComponent_CreateFinetuneJob_Call) Run(run func(ctx context.Context, req types.FinetuneReq)) *MockFinetuneComponent_CreateFinetuneJob_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.FinetuneReq))
	})
	return _c
}

func (_c *MockFinetuneComponent_CreateFinetuneJob_Call) Return(_a0 *types.ArgoWorkFlowRes, _a1 error) *MockFinetuneComponent_CreateFinetuneJob_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockFinetuneComponent_CreateFinetuneJob_Call) RunAndReturn(run func(context.Context, types.FinetuneReq) (*types.ArgoWorkFlowRes, error)) *MockFinetuneComponent_CreateFinetuneJob_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteFinetuneJob provides a mock function with given fields: ctx, req
func (_m *MockFinetuneComponent) DeleteFinetuneJob(ctx context.Context, req types.ArgoWorkFlowDeleteReq) error {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for DeleteFinetuneJob")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.ArgoWorkFlowDeleteReq) error); ok {
		r0 = rf(ctx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFinetuneComponent_DeleteFinetuneJob_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteFinetuneJob'
type MockFinetuneComponent_DeleteFinetuneJob_Call struct {
	*mock.Call
}

// DeleteFinetuneJob is a helper method to define mock.On call
//   - ctx context.Context
//   - req types.ArgoWorkFlowDeleteReq
func (_e *MockFinetuneComponent_Expecter) DeleteFinetuneJob(ctx interface{}, req interface{}) *MockFinetuneComponent_DeleteFinetuneJob_Call {
	return &MockFinetuneComponent_DeleteFinetuneJob_Call{Call: _e.mock.On("DeleteFinetuneJob", ctx, req)}
}

func (_c *MockFinetuneComponent_DeleteFinetuneJob_Call) Run(run func(ctx context.Context, req types.ArgoWorkFlowDeleteReq)) *MockFinetuneComponent_DeleteFinetuneJob_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.ArgoWorkFlowDeleteReq))
	})
	return _c
}

func (_c *MockFinetuneComponent_DeleteFinetuneJob_Call) Return(_a0 error) *MockFinetuneComponent_DeleteFinetuneJob_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFinetuneComponent_DeleteFinetuneJob_Call) RunAndReturn(run func(context.Context, types.ArgoWorkFlowDeleteReq) error) *MockFinetuneComponent_DeleteFinetuneJob_Call {
	_c.Call.Return(run)
	return _c
}

// GetFinetuneJob provides a mock function with given fields: ctx, req
func (_m *MockFinetuneComponent) GetFinetuneJob(ctx context.Context, req types.FinetineGetReq) (*types.FinetuneRes, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for GetFinetuneJob")
	}

	var r0 *types.FinetuneRes
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, types.FinetineGetReq) (*types.FinetuneRes, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, types.FinetineGetReq) *types.FinetuneRes); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.FinetuneRes)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, types.FinetineGetReq) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockFinetuneComponent_GetFinetuneJob_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFinetuneJob'
type MockFinetuneComponent_GetFinetuneJob_Call struct {
	*mock.Call
}

// GetFinetuneJob is a helper method to define mock.On call
//   - ctx context.Context
//   - req types.FinetineGetReq
func (_e *MockFinetuneComponent_Expecter) GetFinetuneJob(ctx interface{}, req interface{}) *MockFinetuneComponent_GetFinetuneJob_Call {
	return &MockFinetuneComponent_GetFinetuneJob_Call{Call: _e.mock.On("GetFinetuneJob", ctx, req)}
}

func (_c *MockFinetuneComponent_GetFinetuneJob_Call) Run(run func(ctx context.Context, req types.FinetineGetReq)) *MockFinetuneComponent_GetFinetuneJob_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(types.FinetineGetReq))
	})
	return _c
}

func (_c *MockFinetuneComponent_GetFinetuneJob_Call) Return(_a0 *types.FinetuneRes, _a1 error) *MockFinetuneComponent_GetFinetuneJob_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockFinetuneComponent_GetFinetuneJob_Call) RunAndReturn(run func(context.Context, types.FinetineGetReq) (*types.FinetuneRes, error)) *MockFinetuneComponent_GetFinetuneJob_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFinetuneComponent creates a new instance of MockFinetuneComponent. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFinetuneComponent(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFinetuneComponent {
	mock := &MockFinetuneComponent{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
