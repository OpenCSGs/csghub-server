// Code generated by mockery v2.53.0. DO NOT EDIT.

package callback

import (
	mock "github.com/stretchr/testify/mock"
	types "opencsg.com/csghub-server/common/types"
)

// MockSyncVersionGenerator is an autogenerated mock type for the SyncVersionGenerator type
type MockSyncVersionGenerator struct {
	mock.Mock
}

type MockSyncVersionGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSyncVersionGenerator) EXPECT() *MockSyncVersionGenerator_Expecter {
	return &MockSyncVersionGenerator_Expecter{mock: &_m.Mock}
}

// GenSyncVersion provides a mock function with given fields: req
func (_m *MockSyncVersionGenerator) GenSyncVersion(req *types.GiteaCallbackPushReq) error {
	ret := _m.Called(req)

	if len(ret) == 0 {
		panic("no return value specified for GenSyncVersion")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.GiteaCallbackPushReq) error); ok {
		r0 = rf(req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockSyncVersionGenerator_GenSyncVersion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenSyncVersion'
type MockSyncVersionGenerator_GenSyncVersion_Call struct {
	*mock.Call
}

// GenSyncVersion is a helper method to define mock.On call
//   - req *types.GiteaCallbackPushReq
func (_e *MockSyncVersionGenerator_Expecter) GenSyncVersion(req interface{}) *MockSyncVersionGenerator_GenSyncVersion_Call {
	return &MockSyncVersionGenerator_GenSyncVersion_Call{Call: _e.mock.On("GenSyncVersion", req)}
}

func (_c *MockSyncVersionGenerator_GenSyncVersion_Call) Run(run func(req *types.GiteaCallbackPushReq)) *MockSyncVersionGenerator_GenSyncVersion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*types.GiteaCallbackPushReq))
	})
	return _c
}

func (_c *MockSyncVersionGenerator_GenSyncVersion_Call) Return(_a0 error) *MockSyncVersionGenerator_GenSyncVersion_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSyncVersionGenerator_GenSyncVersion_Call) RunAndReturn(run func(*types.GiteaCallbackPushReq) error) *MockSyncVersionGenerator_GenSyncVersion_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSyncVersionGenerator creates a new instance of MockSyncVersionGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSyncVersionGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSyncVersionGenerator {
	mock := &MockSyncVersionGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
