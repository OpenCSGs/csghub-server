// Code generated by mockery v2.53.0. DO NOT EDIT.

package proxy

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockReverseProxy is an autogenerated mock type for the ReverseProxy type
type MockReverseProxy struct {
	mock.Mock
}

type MockReverseProxy_Expecter struct {
	mock *mock.Mock
}

func (_m *MockReverseProxy) EXPECT() *MockReverseProxy_Expecter {
	return &MockReverseProxy_Expecter{mock: &_m.Mock}
}

// ServeHTTP provides a mock function with given fields: w, r, api
func (_m *MockReverseProxy) ServeHTTP(w http.ResponseWriter, r *http.Request, api string) {
	_m.Called(w, r, api)
}

// MockReverseProxy_ServeHTTP_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ServeHTTP'
type MockReverseProxy_ServeHTTP_Call struct {
	*mock.Call
}

// ServeHTTP is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
//   - api string
func (_e *MockReverseProxy_Expecter) ServeHTTP(w interface{}, r interface{}, api interface{}) *MockReverseProxy_ServeHTTP_Call {
	return &MockReverseProxy_ServeHTTP_Call{Call: _e.mock.On("ServeHTTP", w, r, api)}
}

func (_c *MockReverseProxy_ServeHTTP_Call) Run(run func(w http.ResponseWriter, r *http.Request, api string)) *MockReverseProxy_ServeHTTP_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request), args[2].(string))
	})
	return _c
}

func (_c *MockReverseProxy_ServeHTTP_Call) Return() *MockReverseProxy_ServeHTTP_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockReverseProxy_ServeHTTP_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request, string)) *MockReverseProxy_ServeHTTP_Call {
	_c.Run(run)
	return _c
}

// NewMockReverseProxy creates a new instance of MockReverseProxy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockReverseProxy(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockReverseProxy {
	mock := &MockReverseProxy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
