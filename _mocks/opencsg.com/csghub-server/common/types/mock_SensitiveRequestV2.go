// Code generated by mockery v2.53.0. DO NOT EDIT.

package types

import (
	mock "github.com/stretchr/testify/mock"
	types "opencsg.com/csghub-server/common/types"
)

// MockSensitiveRequestV2 is an autogenerated mock type for the SensitiveRequestV2 type
type MockSensitiveRequestV2 struct {
	mock.Mock
}

type MockSensitiveRequestV2_Expecter struct {
	mock *mock.Mock
}

func (_m *MockSensitiveRequestV2) EXPECT() *MockSensitiveRequestV2_Expecter {
	return &MockSensitiveRequestV2_Expecter{mock: &_m.Mock}
}

// GetSensitiveFields provides a mock function with no fields
func (_m *MockSensitiveRequestV2) GetSensitiveFields() []types.SensitiveField {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetSensitiveFields")
	}

	var r0 []types.SensitiveField
	if rf, ok := ret.Get(0).(func() []types.SensitiveField); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]types.SensitiveField)
		}
	}

	return r0
}

// MockSensitiveRequestV2_GetSensitiveFields_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSensitiveFields'
type MockSensitiveRequestV2_GetSensitiveFields_Call struct {
	*mock.Call
}

// GetSensitiveFields is a helper method to define mock.On call
func (_e *MockSensitiveRequestV2_Expecter) GetSensitiveFields() *MockSensitiveRequestV2_GetSensitiveFields_Call {
	return &MockSensitiveRequestV2_GetSensitiveFields_Call{Call: _e.mock.On("GetSensitiveFields")}
}

func (_c *MockSensitiveRequestV2_GetSensitiveFields_Call) Run(run func()) *MockSensitiveRequestV2_GetSensitiveFields_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockSensitiveRequestV2_GetSensitiveFields_Call) Return(_a0 []types.SensitiveField) *MockSensitiveRequestV2_GetSensitiveFields_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockSensitiveRequestV2_GetSensitiveFields_Call) RunAndReturn(run func() []types.SensitiveField) *MockSensitiveRequestV2_GetSensitiveFields_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockSensitiveRequestV2 creates a new instance of MockSensitiveRequestV2. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockSensitiveRequestV2(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockSensitiveRequestV2 {
	mock := &MockSensitiveRequestV2{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
