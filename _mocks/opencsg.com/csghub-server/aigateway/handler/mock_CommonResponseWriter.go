// Code generated by mockery v2.53.0. DO NOT EDIT.

package handler

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
	rpc "opencsg.com/csghub-server/builder/rpc"
)

// MockCommonResponseWriter is an autogenerated mock type for the CommonResponseWriter type
type MockCommonResponseWriter struct {
	mock.Mock
}

type MockCommonResponseWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockCommonResponseWriter) EXPECT() *MockCommonResponseWriter_Expecter {
	return &MockCommonResponseWriter_Expecter{mock: &_m.Mock}
}

// Flush provides a mock function with no fields
func (_m *MockCommonResponseWriter) Flush() {
	_m.Called()
}

// MockCommonResponseWriter_Flush_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Flush'
type MockCommonResponseWriter_Flush_Call struct {
	*mock.Call
}

// Flush is a helper method to define mock.On call
func (_e *MockCommonResponseWriter_Expecter) Flush() *MockCommonResponseWriter_Flush_Call {
	return &MockCommonResponseWriter_Flush_Call{Call: _e.mock.On("Flush")}
}

func (_c *MockCommonResponseWriter_Flush_Call) Run(run func()) *MockCommonResponseWriter_Flush_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCommonResponseWriter_Flush_Call) Return() *MockCommonResponseWriter_Flush_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCommonResponseWriter_Flush_Call) RunAndReturn(run func()) *MockCommonResponseWriter_Flush_Call {
	_c.Run(run)
	return _c
}

// Header provides a mock function with no fields
func (_m *MockCommonResponseWriter) Header() http.Header {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Header")
	}

	var r0 http.Header
	if rf, ok := ret.Get(0).(func() http.Header); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.Header)
		}
	}

	return r0
}

// MockCommonResponseWriter_Header_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Header'
type MockCommonResponseWriter_Header_Call struct {
	*mock.Call
}

// Header is a helper method to define mock.On call
func (_e *MockCommonResponseWriter_Expecter) Header() *MockCommonResponseWriter_Header_Call {
	return &MockCommonResponseWriter_Header_Call{Call: _e.mock.On("Header")}
}

func (_c *MockCommonResponseWriter_Header_Call) Run(run func()) *MockCommonResponseWriter_Header_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockCommonResponseWriter_Header_Call) Return(_a0 http.Header) *MockCommonResponseWriter_Header_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockCommonResponseWriter_Header_Call) RunAndReturn(run func() http.Header) *MockCommonResponseWriter_Header_Call {
	_c.Call.Return(run)
	return _c
}

// WithModeration provides a mock function with given fields: _a0
func (_m *MockCommonResponseWriter) WithModeration(_a0 rpc.ModerationSvcClient) {
	_m.Called(_a0)
}

// MockCommonResponseWriter_WithModeration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WithModeration'
type MockCommonResponseWriter_WithModeration_Call struct {
	*mock.Call
}

// WithModeration is a helper method to define mock.On call
//   - _a0 rpc.ModerationSvcClient
func (_e *MockCommonResponseWriter_Expecter) WithModeration(_a0 interface{}) *MockCommonResponseWriter_WithModeration_Call {
	return &MockCommonResponseWriter_WithModeration_Call{Call: _e.mock.On("WithModeration", _a0)}
}

func (_c *MockCommonResponseWriter_WithModeration_Call) Run(run func(_a0 rpc.ModerationSvcClient)) *MockCommonResponseWriter_WithModeration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(rpc.ModerationSvcClient))
	})
	return _c
}

func (_c *MockCommonResponseWriter_WithModeration_Call) Return() *MockCommonResponseWriter_WithModeration_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCommonResponseWriter_WithModeration_Call) RunAndReturn(run func(rpc.ModerationSvcClient)) *MockCommonResponseWriter_WithModeration_Call {
	_c.Run(run)
	return _c
}

// Write provides a mock function with given fields: _a0
func (_m *MockCommonResponseWriter) Write(_a0 []byte) (int, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Write")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte) (int, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func([]byte) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockCommonResponseWriter_Write_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Write'
type MockCommonResponseWriter_Write_Call struct {
	*mock.Call
}

// Write is a helper method to define mock.On call
//   - _a0 []byte
func (_e *MockCommonResponseWriter_Expecter) Write(_a0 interface{}) *MockCommonResponseWriter_Write_Call {
	return &MockCommonResponseWriter_Write_Call{Call: _e.mock.On("Write", _a0)}
}

func (_c *MockCommonResponseWriter_Write_Call) Run(run func(_a0 []byte)) *MockCommonResponseWriter_Write_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *MockCommonResponseWriter_Write_Call) Return(_a0 int, _a1 error) *MockCommonResponseWriter_Write_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockCommonResponseWriter_Write_Call) RunAndReturn(run func([]byte) (int, error)) *MockCommonResponseWriter_Write_Call {
	_c.Call.Return(run)
	return _c
}

// WriteHeader provides a mock function with given fields: _a0
func (_m *MockCommonResponseWriter) WriteHeader(_a0 int) {
	_m.Called(_a0)
}

// MockCommonResponseWriter_WriteHeader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteHeader'
type MockCommonResponseWriter_WriteHeader_Call struct {
	*mock.Call
}

// WriteHeader is a helper method to define mock.On call
//   - _a0 int
func (_e *MockCommonResponseWriter_Expecter) WriteHeader(_a0 interface{}) *MockCommonResponseWriter_WriteHeader_Call {
	return &MockCommonResponseWriter_WriteHeader_Call{Call: _e.mock.On("WriteHeader", _a0)}
}

func (_c *MockCommonResponseWriter_WriteHeader_Call) Run(run func(_a0 int)) *MockCommonResponseWriter_WriteHeader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockCommonResponseWriter_WriteHeader_Call) Return() *MockCommonResponseWriter_WriteHeader_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockCommonResponseWriter_WriteHeader_Call) RunAndReturn(run func(int)) *MockCommonResponseWriter_WriteHeader_Call {
	_c.Run(run)
	return _c
}

// NewMockCommonResponseWriter creates a new instance of MockCommonResponseWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCommonResponseWriter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCommonResponseWriter {
	mock := &MockCommonResponseWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
