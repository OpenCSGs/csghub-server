// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"git-devops.opencsg.com/product/community/starhub-server/cmd/starhub-server/cmd/common"
	"git-devops.opencsg.com/product/community/starhub-server/pkg/apiserver"
	"git-devops.opencsg.com/product/community/starhub-server/pkg/cache"
	"git-devops.opencsg.com/product/community/starhub-server/pkg/httpbase"
	"git-devops.opencsg.com/product/community/starhub-server/pkg/model"
	"git-devops.opencsg.com/product/community/starhub-server/pkg/serverhost"
)

// Injectors from wire.go:

func initAPIServer(ctx context.Context) (*httpbase.GracefulServer, error) {
	config, err := common.ProvideConfig()
	if err != nil {
		return nil, err
	}
	redisConfig := cache.ProvideRedisConfig(config)
	cacheCache, err := cache.ProvideCache(ctx, redisConfig)
	if err != nil {
		return nil, err
	}
	dbConfig := model.ProvideDBConfig(config)
	db, err := model.ProvideDatabse(ctx, dbConfig)
	if err != nil {
		return nil, err
	}
	logger := apiserver.ProvideServerLogger()
	opt := serverhost.ProvideOpt(config)
	serverHost, err := serverhost.ProvideServerHost(opt)
	if err != nil {
		return nil, err
	}
	serverOpt := apiserver.ProvideServerOpt(config, cacheCache, db, logger, serverHost)
	gracefulServer, err := apiserver.ProvideGracefulServer(serverOpt)
	if err != nil {
		return nil, err
	}
	return gracefulServer, nil
}
