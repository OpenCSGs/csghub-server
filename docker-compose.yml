services:

  postgres:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/csghub/postgres:15.10
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_MULTIPLE_DATABASES: "starhub_server,csghub_casdoor,temporal,temporal_visibility,mirror"
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    networks:
      - my_ce_network

  minio:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/bitnami/minio:2023
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "Password_123"
      MINIO_SCHEME: "http"
      MINIO_DEFAULT_BUCKETS: opencsg-server-lfs:public,opencsg-portal-storage:public,loki-data:public
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio_data:/bitnami/minio/data
    networks:
      - my_ce_network

  redis:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/redis:7.2.5
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - my_ce_network
    
  gitaly:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/gitaly:v16.4.6
    command:
      ["bash", "-c", "mkdir -p /home/git/repositories && rm -rf /srv/gitlab-shell/hooks/* && touch /srv/gitlab-shell/.gitlab_shell_secret && exec /usr/bin/env GITALY_CONFIG_FILE=/home/gitaly.config.toml /scripts/process-wrapper"]
    environment:
      - GITALY_CONFIG_FILE=/home/gitaly.config.toml
    user: "root"
    ports:
      - '8075:8075'
    volumes:
      - ./data/gitaly.config.toml:/home/gitaly.config.toml
      - ./data/gitaly/git/repositories:/home/git/repositories
      - ./data/gitaly/git/hooks:/home/git/hooks
      - ./data/gitaly/log:/var/log/gitaly
    networks:
      - my_ce_network

  natsmaster:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/csghub_nats:2.10.16
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '1'
          memory: 1G
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    volumes:
      - ./data/nats-server.conf:/nats-server.conf
      - ./data/jetstream:/data/jetstream
    restart: always
    networks:
      - my_ce_network

  temporal:
    depends_on:
      - postgres
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=postgres
      - DEFAULT_NAMESPACE_RETENTION=7d
      - POSTGRES_SEEDS=postgres
    # uncomment to use docker hub
    # image: temporalio/auto-setup:1.25.1
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/temporalio/auto-setup:1.25.1
    ports:
      - 7233:7233
    networks:
      - my_ce_network

  temporal-ui:
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    # uncomment to use docker hub
    # image: temporalio/ui:2.30.3
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/temporalio/ui:2.30.3
    ports:
      - 8180:8080
    networks:
      - my_ce_network

  loki:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/grafana/loki:3.1.0
    container_name: loki
    restart: unless-stopped
    command:
      - "-config.file=/etc/loki/loki-config.yaml"
    ports:
      - "3100:3100"
    volumes:
      - ./data/loki-data:/data
      - ./data/loki-config.yaml:/etc/loki/loki-config.yaml
    networks:
      - my_ce_network

  # default user: root/Root@1234
  casdoor:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsg_public/casbin/casdoor:v1.733.0
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      RUNNING_IN_DOCKER: true
    volumes:
      - ./data/casdoor/conf:/conf
    restart: always
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8000" ]
      interval: 10s
      timeout: 10s
      retries: 30
    networks:
      - my_ce_network

  starhub_server:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
    depends_on:
      - postgres
      - gitaly
      - minio
      - redis
      - natsmaster
      - temporal
      - loki
    entrypoint:
      - /starhub-bin/starhub
      - start
      - server
      - "--config=/starhub-bin/config/config.toml"
    ports:
      - "8080:8080"
    volumes:
      - ./data/config.toml:/starhub-bin/config/config.toml:r
    networks:
      - my_ce_network

  user_server:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
    entrypoint:
      - /starhub-bin/starhub
      - user
      - launch
      - "--config=/starhub-bin/config/config.toml"
    depends_on:
      - postgres
      - starhub_server
    ports:
      - "8088:8088"
    volumes:
      - ./data/casdoor/:/starhub-bin/casdoor/:r
      - ./data/config.toml:/starhub-bin/config/config.toml:r
    networks:
      - my_ce_network

  account_server:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
    entrypoint:
      - /starhub-bin/starhub
      - accounting
      - launch
      - "--config=/starhub-bin/config/config.toml"
    depends_on:
      - postgres
      - natsmaster
      - starhub_server
    ports:
      - "8086:8086"
    volumes:
      - ./data/config.toml:/starhub-bin/config/config.toml:r
    networks:
      - my_ce_network

  dataviewer:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    entrypoint:
      - /starhub-bin/starhub
      - dataviewer
      - launch
      - "--config=/starhub-bin/config/config.toml"
    depends_on:
      - postgres
      - gitaly
      - starhub_server
    ports:
      - "8093:8093"
    volumes:
      - ./data/config.toml:/starhub-bin/config/config.toml:r
    networks:
      - my_ce_network

  notification_server:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
    entrypoint:
      - /starhub-bin/starhub
      - notification
      - launch
      - --config=/starhub-bin/config/config.toml
    depends_on:
      - postgres
      - starhub_server
    ports:
      - "8095:8095"
    volumes:
      - ./data/config.toml:/starhub-bin/config/config.toml:r
    networks:
      - my_ce_network

  starhub_proxy:
    image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
    entrypoint:
      - /starhub-bin/starhub
      - start
      - rproxy
      - --config=/starhub-bin/config/config.toml
    depends_on:
      - postgres
      - starhub_server
    ports:
      - "8083:8083"
    volumes:
      - ./data/config.toml:/starhub-bin/config/config.toml:r
    networks:
      - my_ce_network

  # Uncomment starhub_runner when you have Kubernetes config file
  # starhub_runner:
  #   image: opencsg-registry.cn-beijing.cr.aliyuncs.com/opencsghq/csghub-server:latest
  #   entrypoint:
  #     - /starhub-bin/starhub
  #     - deploy
  #     - runner
  #     - --config=/starhub-bin/config/config.toml
  #   ports:
  #     - "8082:8082"
  #   volumes:
  #     - ./data/kube:/root/.kube:r
  #     - ./data/config.toml:/starhub-bin/config/config.toml:r
  #   networks:
  #     - my_ce_network

networks:
  my_ce_network:
    driver: bridge
